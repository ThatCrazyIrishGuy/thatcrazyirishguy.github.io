{"version":3,"sources":["webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/@sentry/hub/esm/hub.js","webpack:///./node_modules/node-libs-browser/node_modules/process/browser.js","webpack:///./node_modules/@sentry/hub/esm/scope.js","webpack:///./node_modules/@sentry/hub/esm/span.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/@sentry/utils/esm/is.js","webpack:///./node_modules/@sentry/utils/esm/misc.js","webpack:///./node_modules/@sentry/utils/esm/memo.js","webpack:///./node_modules/@sentry/utils/esm/syncpromise.js","webpack:///./node_modules/@sentry/utils/esm/object.js","webpack:///./node_modules/@sentry/utils/esm/logger.js","webpack:///./node_modules/@sentry/types/esm/severity.js","webpack:///./node_modules/@sentry/types/esm/status.js","webpack:///./node_modules/@sentry/minimal/esm/index.js","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/@sentry/utils/esm/string.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/@sentry/utils/esm/error.js","webpack:///./node_modules/@sentry/core/esm/dsn.js","webpack:///./node_modules/@sentry/core/esm/api.js","webpack:///./node_modules/@sentry/core/esm/integration.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js","webpack:///./node_modules/@sentry/core/esm/transports/noop.js","webpack:///./node_modules/@sentry/core/esm/basebackend.js","webpack:///./node_modules/@sentry/utils/esm/supports.js","webpack:///./node_modules/@sentry/browser/esm/tracekit.js","webpack:///./node_modules/@sentry/browser/esm/parsers.js","webpack:///./node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///./node_modules/@sentry/browser/esm/transports/base.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/@sentry/browser/esm/backend.js","webpack:///./node_modules/@sentry/browser/esm/version.js","webpack:///./node_modules/@sentry/browser/esm/client.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/@sentry/browser/esm/integrations/useragent.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js","webpack:///./node_modules/@sentry/core/esm/sdk.js","webpack:///./node_modules/@sentry/browser/esm/index.js"],"names":["__webpack_require__","d","__webpack_exports__","__extends","__assign","__read","__spread","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","assign","t","s","i","n","arguments","length","call","apply","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","concat","module","Hub","getCurrentHub","getHubFromCarrier","tslib__WEBPACK_IMPORTED_MODULE_0__","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","_scope__WEBPACK_IMPORTED_MODULE_3__","API_VERSION","client","scope","_version","_stack","_invokeClient","method","_a","args","_i","top","getStackTop","isOlderThan","version","bindClient","pushScope","stack","getStack","parentScope","undefined","clone","getClient","popScope","pop","withScope","callback","getScope","captureException","exception","hint","eventId","_lastEventId","event_id","captureMessage","message","level","captureEvent","event","lastEventId","addBreadcrumb","breadcrumb","getOptions","_b","beforeBreadcrumb","_c","maxBreadcrumbs","timestamp","Date","getTime","mergedBreadcrumb","finalBreadcrumb","Math","min","configureScope","run","oldHub","makeMain","getIntegration","integration","_oO","warn","id","traceHeaders","span","getSpan","sentry-trace","toTraceparent","getMainCarrier","carrier","__SENTRY__","hub","registry","setHubOnCarrier","hasHubOnCarrier","activeDomain","active","registryHubTopStack","_Oo","cachedSetTimeout","cachedClearTimeout","process","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","Scope","addGlobalEventProcessor","_sentry_utils__WEBPACK_IMPORTED_MODULE_3__","_sentry_utils__WEBPACK_IMPORTED_MODULE_4__","_span__WEBPACK_IMPORTED_MODULE_5__","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","addEventProcessor","_notifyScopeListeners","_this","forEach","_notifyEventProcessors","processors","index","resolve","reject","processor","result","then","final","catch","setUser","user","setTags","tags","setTag","key","setExtras","extra","setExtra","setFingerprint","fingerprint","_fingerprint","setLevel","_level","setTransaction","transaction","_transaction","setContext","context","setSpan","_span","startSpan","newScope","clear","slice","clearBreadcrumbs","_applyFingerprint","isArray","applyToEvent","keys","contexts","trace","breadcrumbs","getGlobalEventProcessors","global","globalEventProcessors","Span","_sentry_utils__WEBPACK_IMPORTED_MODULE_0__","TRACEPARENT_REGEXP","_traceId","_spanId","_recorded","_parent","substring","fromTraceparent","traceparent","matches","match","parent_1","toJSON","parent","span_id","trace_id","originalModule","webpackPolyfill","children","defineProperty","enumerable","get","l","isError","wat","toString","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isRegExp","isThenable","Boolean","isSyntheticEvent","dynamicRequire","mod","request","require","getGlobalObject","uuid4","parseUrl","getEventDescription","consoleSandbox","addExceptionTypeValue","fallbackGlobalObject","window","self","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","random","url","query","fragment","host","path","protocol","relative","values","type","originalConsole","console","wrappedLevels","__sentry__","__sentry_wrapped__","__sentry_original__","mechanism","handled","Memo","_hasWeakSet","WeakSet","_inner","memoize","obj","has","add","unmemoize","delete","splice","SyncPromise","States","_is__WEBPACK_IMPORTED_MODULE_0__","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","_value","_executeHandlers","h","onFail","onSuccess","_attachHandler","handler","onfulfilled","onrejected","val","_","fill","urlEncode","normalizeToSize","normalize","_memo__WEBPACK_IMPORTED_MODULE_1__","source","replacement","original","wrapped","defineProperties","object","map","encodeURIComponent","join","jsonSize","encodeURI","split","utf8Length","JSON","stringify","depth","maxSize","serialized","normalizeValue","_events","document","Event","getPrototypeOf","Number","isNaN","walk","memo","Infinity","normalized","serializeValue","err","objectifyError","acc","innerKey","input","parse","logger","_misc__WEBPACK_IMPORTED_MODULE_0__","PREFIX","Logger","_enabled","disable","enable","log","Severity","Status","fromString","Debug","Info","Warning","Fatal","Critical","Log","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","callOnHub","esm_hub","tslib_es6","syntheticException","originalException","originalFunctionToString","FunctionToString","setupOnce","Function","truncate","str","max","substr","safeJoin","delimiter","output","String","keysToEventMessage","maxLength","includedKeys","isMatchingPattern","pattern","is","test","includes","DEFAULT_IGNORE_ERRORS","inboundfilters_InboundFilters","InboundFilters","_options","esm_scope","clientOptions","options","_mergeOptions","_shouldDropEvent","_isSentryError","misc","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","blacklistUrls","whitelistUrls","oO","stacktrace","frames_1","frames","filename","frames_2","error_SentryError","_super","SentryError","_newTarget","DSN_REGEX","dsn_Dsn","Dsn","from","_fromString","_fromComponents","_validate","withPassword","pass","port","projectId","exec","components","component","parseInt","api_API","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","header","Content-Type","X-Sentry-Auth","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","email","installedIntegrations","setupIntegrations","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","pickedIntegrationsNames_1","defaultIntegration","indexOf","userIntegration","getIntegrationsToSetup","setupIntegration","baseclient_BaseClient","BaseClient","backendClass","_processing","_backend","_dsn","_integrations","_getBackend","eventFromException","_processEvent","finalEvent","eventFromMessage","flush","_isClientProcessing","clientReady","_processingInterval","clearInterval","getTransport","close","transportFlushed","enabled","getIntegrations","Promise","ticked","setInterval","_isEnabled","_prepareEvent","environment","release","dist","maxValueLength","prepared","_addIntegrations","sdk","syncpromise","sdkInfo","integrationsArray","beforeSend","sampleRate","data","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","noop_NoopTransport","NoopTransport","status","Skipped","basebackend_BaseBackend","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","supportsFetch","Headers","Request","Response","supportsReferrerPolicy","referrerPolicy","tracekit_window","TraceKit","_report","_collectWindowErrors","_computeStackTrace","_linesOfContext","UNKNOWN_FUNCTION","ERROR_TYPES_RE","_has","getLocationHref","location","href","_oldOnerrorHandler","_onErrorHandlerInstalled","handlers","lastException","lastExceptionStack","_notifyHandlers","isWindowError","inner","_traceKitWindowOnError","lineNo","columnNo","errorObj","_augmentStackTraceWithInitialElement","processLastException","line","column","msg","groups","func","mode","_traceKitWindowOnUnhandledRejection","detail","_lastExceptionStack","_lastException","ex","incomplete","_subscribe","_installGlobalHandler","onerror","_installGlobalUnhandledRejectionHandler","onunhandledrejection","_computeStackTraceFromStackProp","submatch","parts","element","chrome","gecko","winjs","geckoEval","chromeEval","lines","reference","j","isNative","columnNumber","stackInfo","initial","unshift","partial","_computeStackTraceByWalkingCallerChain","item","functionName","funcs","recursion","curr","caller","sourceURL","fileName","lineNumber","description","computeStackTrace","opera10Regex","opera11Regex","_computeStackTraceFromStacktraceProp","lineRE1","lineRE2","lineRE3","scripts","getElementsByTagName","inlineScriptBlocks","src","_computeStackTraceFromOperaMultiLineMessage","tracekit_subscribe","tracekit_installGlobalHandler","tracekit_installGlobalUnhandledRejectionHandler","STACKTRACE_LIMIT","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","function","in_app","lineno","reverse","promisebuffer_PromiseBuffer","PromiseBuffer","_limit","_buffer","isReady","task","remove","drain","capturedSetTimeout","all","base_BaseTransport","BaseTransport","fetch_global","fetch_FetchTransport","FetchTransport","defaultOptions","body","fetch","response","xhr_XHRTransport","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","open","send","backend_BrowserBackend","BrowserBackend","transportOptions","transport","_buildEvent","domException","name_1","message_1","messageEvent","exceptionKeys","sort","__serialized__","eventFromPlainObject","synthetic","stringException","attachStacktrace","SDK_NAME","client_BrowserClient","BrowserClient","platform","packages","showReportDialog","script","createElement","async","onLoad","onload","head","appendChild","keypressTimeout","lastCapturedEvent","debounceDuration","ignoreOnError","wrap","fn","before","sentryWrapped","wrappedArguments","arg","handleEvent","property","debounceTimer","breadcrumbEventHandler","eventName","debounce","captureBreadcrumb","target","_htmlTreeAsString","category","keypressEventHandler","tagName","isContentEditable","elem","nextStr","currentElem","out","height","sepLength","_htmlElementAsString","parentNode","className","classes","attr","toLowerCase","attrWhitelist","getAttribute","trycatch_TryCatch","TryCatch","_ignoreOnError","_wrapTimeFunction","originalCallback","getFunctionName","_wrapRAF","_wrapEventTarget","proto","bind","lastHref","breadcrumbs_global","breadcrumbs_Breadcrumbs","Breadcrumbs","dom","history","sentry","xhr","_instrumentConsole","originalConsoleLevel","breadcrumbData","_instrumentDOM","addEventListener","innerOriginal","_instrumentFetch","originalFetch","fetchInput","filterUrl","addSentryBreadcrumb","fetchData","status_code","_instrumentHistory","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","captureUrlChange","to","parsedLoc","parsedTo","parsedFrom","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","prop","wrapProp","serializedData","event_1","globalhandlers_GlobalHandlers","GlobalHandlers","stackTraceLimit","_eventFromGlobalHandler","fallbackValue","fallbackType","DEFAULT_KEY","DEFAULT_LIMIT","linkederrors_LinkedErrors","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","useragent_global","useragent_UserAgent","UserAgent","navigator","headers","userAgent","sdk_defaultIntegrations","integrations_namespaceObject","init","clientClass","debug","initAndBind","forceLoad","sdk_close","sdk_wrap","INTEGRATIONS","transports_namespaceObject","windowIntegrations","_window","Sentry","Integrations","esm_integrations_namespaceObject"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAgBA,IAAAC,EAAA,SAAAN,EAAAO,GAIA,OAHAD,EAAAE,OAAAC,gBACA,CAAUC,UAAA,cAAgBC,OAAA,SAAAX,EAAAO,GAAsCP,EAAAU,UAAAH,IAChE,SAAAP,EAAAO,GAAyB,QAAAK,KAAAL,IAAAM,eAAAD,KAAAZ,EAAAY,GAAAL,EAAAK,MACzBZ,EAAAO,IAGO,SAAAL,EAAAF,EAAAO,GAEP,SAAAO,IAAmBC,KAAAC,YAAAhB,EADnBM,EAAAN,EAAAO,GAEAP,EAAAiB,UAAA,OAAAV,EAAAC,OAAAU,OAAAX,IAAAO,EAAAG,UAAAV,EAAAU,UAAA,IAAAH,GAGO,IAAAX,EAAA,WAQP,OAPAA,EAAAK,OAAAW,QAAA,SAAAC,GACA,QAAAC,EAAAC,EAAA,EAAAC,EAAAC,UAAAC,OAAgDH,EAAAC,EAAOD,IAEvD,QAAAV,KADAS,EAAAG,UAAAF,GACAd,OAAAS,UAAAJ,eAAAa,KAAAL,EAAAT,KAAAQ,EAAAR,GAAAS,EAAAT,IAEA,OAAAQ,IAEAO,MAAAZ,KAAAS,YAgFO,SAAApB,EAAAwB,EAAAL,GACP,IAAAM,EAAA,mBAAAC,QAAAF,EAAAE,OAAAC,UACA,IAAAF,EAAA,OAAAD,EACA,IAAAI,EAAAC,EAAAX,EAAAO,EAAAH,KAAAE,GAAAM,EAAA,GACA,IACA,eAAAX,QAAA,MAAAS,EAAAV,EAAAa,QAAAC,MAAAF,EAAAG,KAAAL,EAAAM,OAEA,MAAAC,GAAmBN,EAAA,CAAMM,SACzB,QACA,IACAP,MAAAI,OAAAP,EAAAP,EAAA,SAAAO,EAAAH,KAAAJ,GAEA,QAAiB,GAAAW,EAAA,MAAAA,EAAAM,OAEjB,OAAAL,EAGO,SAAA7B,IACP,QAAA6B,EAAA,GAAAZ,EAAA,EAA4BA,EAAAE,UAAAC,OAAsBH,IAClDY,IAAAM,OAAApC,EAAAoB,UAAAF,KACA,OAAAY,sCCzIA,SAAAO,GAAA1C,EAAAC,EAAAC,EAAA,sBAAAyC,IAAA3C,EAAAC,EAAAC,EAAA,sBAAA0C,IAAA5C,EAAAC,EAAAC,EAAA,sBAAA2C,IAAA,IAAAC,EAAA9C,EAAA,KAAA+C,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAA,KAAAiD,EAAAjD,EAAA,KAWOkD,EAAA,EAcPP,EAAA,WASA,SAAAA,EAAAQ,EAAAC,EAAAC,QACA,IAAAD,IAA+BA,EAAA,IAAaH,EAAA,QAC5C,IAAAI,IAAkCA,EAAAH,GAClClC,KAAAqC,WAEArC,KAAAsC,OAAA,GACAtC,KAAAsC,OAAAhB,KAAA,CAA0Ba,SAAAC,UA2L1B,OAnLAT,EAAAzB,UAAAqC,cAAA,SAAAC,GAGA,IAFA,IAAAC,EACAC,EAAA,GACAC,EAAA,EAAwBA,EAAAlC,UAAAC,OAAuBiC,IAC/CD,EAAAC,EAAA,GAAAlC,UAAAkC,GAEA,IAAAC,EAAA5C,KAAA6C,cACAD,KAAAT,QAAAS,EAAAT,OAAAK,KACAC,EAAAG,EAAAT,QAAAK,GAAA5B,MAAA6B,EAAgDX,EAAA,EAAgBY,EAAA,CAAAE,EAAAR,UAMhET,EAAAzB,UAAA4C,YAAA,SAAAC,GACA,OAAA/C,KAAAqC,SAAAU,GAKApB,EAAAzB,UAAA8C,WAAA,SAAAb,GACAnC,KAAA6C,cACAV,UAKAR,EAAAzB,UAAA+C,UAAA,WAEA,IAAAC,EAAAlD,KAAAmD,WACAC,EAAAF,EAAAxC,OAAA,EAAAwC,IAAAxC,OAAA,GAAA0B,WAAAiB,EACAjB,EAAoBH,EAAA,EAAKqB,MAAAF,GAKzB,OAJApD,KAAAmD,WAAA7B,KAAA,CACAa,OAAAnC,KAAAuD,YACAnB,UAEAA,GAKAT,EAAAzB,UAAAsD,SAAA,WACA,YAAAH,IAAArD,KAAAmD,WAAAM,OAKA9B,EAAAzB,UAAAwD,UAAA,SAAAC,GACA,IAAAvB,EAAApC,KAAAiD,YACA,IACAU,EAAAvB,GAEA,QACApC,KAAAwD,aAMA7B,EAAAzB,UAAAqD,UAAA,WACA,OAAAvD,KAAA6C,cAAAV,QAGAR,EAAAzB,UAAA0D,SAAA,WACA,OAAA5D,KAAA6C,cAAAT,OAGAT,EAAAzB,UAAAiD,SAAA,WACA,OAAAnD,KAAAsC,QAGAX,EAAAzB,UAAA2C,YAAA,WACA,OAAA7C,KAAAsC,OAAAtC,KAAAsC,OAAA5B,OAAA,IAKAiB,EAAAzB,UAAA2D,iBAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAhE,KAAAiE,aAA2CxE,OAAAsC,EAAA,EAAAtC,GAE3C,OADAO,KAAAuC,cAAA,mBAAAuB,EAA0DhC,EAAA,EAAgB,GAAGiC,EAAA,CAASG,SAAAF,KACtFA,GAKArC,EAAAzB,UAAAiE,eAAA,SAAAC,EAAAC,EAAAN,GACA,IAAAC,EAAAhE,KAAAiE,aAA2CxE,OAAAsC,EAAA,EAAAtC,GAE3C,OADAO,KAAAuC,cAAA,iBAAA6B,EAAAC,EAA6DvC,EAAA,EAAgB,GAAGiC,EAAA,CAASG,SAAAF,KACzFA,GAKArC,EAAAzB,UAAAoE,aAAA,SAAAC,EAAAR,GACA,IAAAC,EAAAhE,KAAAiE,aAA2CxE,OAAAsC,EAAA,EAAAtC,GAE3C,OADAO,KAAAuC,cAAA,eAAAgC,EAAkDzC,EAAA,EAAgB,GAAGiC,EAAA,CAASG,SAAAF,KAC9EA,GAKArC,EAAAzB,UAAAsE,YAAA,WACA,OAAAxE,KAAAiE,cAKAtC,EAAAzB,UAAAuE,cAAA,SAAAC,EAAAX,GACA,IAAAnB,EAAA5C,KAAA6C,cACA,GAAAD,EAAAR,OAAAQ,EAAAT,OAAA,CAGA,IAAAM,EAAAG,EAAAT,OAAAwC,YAAA/B,EAAAT,OAAAwC,cAAA,GAAyEC,EAAAnC,EAAAoC,wBAAA,IAAAD,EAAA,KAAAA,EAAAE,EAAArC,EAAAsC,sBAAA,IAAAD,EAhJzE,GAgJyEA,EACzE,KAAAC,GAAA,IAGA,IAAAC,GAAA,IAAAC,MAAAC,UAAA,IACAC,EAA+BrD,EAAA,EAAgB,CAAEkD,aAAuBN,GACxEU,EAAAP,EACcpF,OAAAsC,EAAA,EAAAtC,CAAc,WAAc,OAAAoF,EAAAM,EAAApB,KAC1CoB,EACA,OAAAC,GAGAxC,EAAAR,MAAAqC,cAAAW,EAAAC,KAAAC,IAAAP,EAvJA,SA4JApD,EAAAzB,UAAAqF,eAAA,SAAA5B,GACA,IAAAf,EAAA5C,KAAA6C,cACAD,EAAAR,OAAAQ,EAAAT,QAEAwB,EAAAf,EAAAR,QAMAT,EAAAzB,UAAAsF,IAAA,SAAA7B,GACA,IAAA8B,EAAAC,EAAA1F,MACA,IACA2D,EAAA3D,MAEA,QACA0F,EAAAD,KAMA9D,EAAAzB,UAAAyF,eAAA,SAAAC,GACA,IAAAzD,EAAAnC,KAAAuD,YACA,IAAApB,EACA,YAEA,IACA,OAAAA,EAAAwD,eAAAC,GAEA,MAAAC,GAEA,OADY7D,EAAA,EAAM8D,KAAA,+BAAAF,EAAAG,GAAA,yBAClB,OAMApE,EAAAzB,UAAA8F,aAAA,WACA,IAAApD,EAAA5C,KAAA6C,cACA,GAAAD,EAAAR,OAAAQ,EAAAT,OAAA,CACA,IAAA8D,EAAArD,EAAAR,MAAA8D,UACA,GAAAD,EACA,OACAE,eAAAF,EAAAG,iBAIA,UAEAzE,EA1MA,GA8MO,SAAA0E,IACP,IAAAC,EAAkB7G,OAAAsC,EAAA,EAAAtC,GAIlB,OAHA6G,EAAAC,WAAAD,EAAAC,YAAA,CACAC,SAAAnD,GAEAiD,EAOO,SAAAZ,EAAAc,GACP,IAAAC,EAAAJ,IACAZ,EAAA5D,EAAA4E,GAEA,OADAC,EAAAD,EAAAD,GACAf,EASO,SAAA7D,IAEP,IAAA6E,EAAAJ,IAEAM,EAAAF,KAAA5E,EAAA4E,GAAA3D,YAAAZ,IACAwE,EAAAD,EAAA,IAAA9E,GAGA,IAIA,IACAiF,EADqBnH,OAAAsC,EAAA,EAAAtC,CAAciC,EAAA,UACnCmF,OAEA,IAAAD,EACA,OAAA/E,EAAA4E,GAGA,IAAAE,EAAAC,IAAA/E,EAAA+E,GAAA9D,YAAAZ,GAAA,CACA,IAAA4E,EAAAjF,EAAA4E,GAAA5D,cACA6D,EAAAE,EAAA,IAAAjF,EAAAmF,EAAA3E,OAA8EF,EAAA,EAAKqB,MAAAwD,EAAA1E,SAGnF,OAAAP,EAAA+E,GAEA,MAAAG,GAEA,OAAAlF,EAAA4E,IAOA,SAAAE,EAAAL,GACA,SAAAA,KAAAC,YAAAD,EAAAC,WAAAC,KAWO,SAAA3E,EAAAyE,GACP,OAAAA,KAAAC,YAAAD,EAAAC,WAAAC,IACAF,EAAAC,WAAAC,KAEAF,EAAAC,WAAAD,EAAAC,YAAA,GACAD,EAAAC,WAAAC,IAAA,IAAA7E,EACA2E,EAAAC,WAAAC,KAOO,SAAAE,EAAAJ,EAAAE,GACP,QAAAF,IAGAA,EAAAC,WAAAD,EAAAC,YAAA,GACAD,EAAAC,WAAAC,OACA,8CCjUA,IAOAQ,EACAC,EARAC,EAAAxF,EAAAyF,QAAA,GAUA,SAAAC,IACA,UAAAC,MAAA,mCAEA,SAAAC,IACA,UAAAD,MAAA,qCAsBA,SAAAE,EAAAC,GACA,GAAAR,IAAAS,WAEA,OAAAA,WAAAD,EAAA,GAGA,IAAAR,IAAAI,IAAAJ,IAAAS,WAEA,OADAT,EAAAS,WACAA,WAAAD,EAAA,GAEA,IAEA,OAAAR,EAAAQ,EAAA,GACK,MAAAtG,GACL,IAEA,OAAA8F,EAAArG,KAAA,KAAA6G,EAAA,GACS,MAAAtG,GAET,OAAA8F,EAAArG,KAAAX,KAAAwH,EAAA,MAvCA,WACA,IAEAR,EADA,mBAAAS,WACAA,WAEAL,EAEK,MAAAlG,GACL8F,EAAAI,EAEA,IAEAH,EADA,mBAAAS,aACAA,aAEAJ,EAEK,MAAApG,GACL+F,EAAAK,GAjBA,GAwEA,IAEAK,EAFAC,EAAA,GACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAAjH,OACAkH,EAAAD,EAAAlG,OAAAmG,GAEAE,GAAA,EAEAF,EAAAlH,QACAsH,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAI,EAAAV,EAAAQ,GACAF,GAAA,EAGA,IADA,IAAAK,EAAAN,EAAAlH,OACAwH,GAAA,CAGA,IAFAP,EAAAC,EACAA,EAAA,KACAE,EAAAI,GACAP,GACAA,EAAAG,GAAAtC,MAGAsC,GAAA,EACAI,EAAAN,EAAAlH,OAEAiH,EAAA,KACAE,GAAA,EAnEA,SAAAM,GACA,GAAAlB,IAAAS,aAEA,OAAAA,aAAAS,GAGA,IAAAlB,IAAAK,IAAAL,IAAAS,aAEA,OADAT,EAAAS,aACAA,aAAAS,GAEA,IAEAlB,EAAAkB,GACK,MAAAjH,GACL,IAEA,OAAA+F,EAAAtG,KAAA,KAAAwH,GACS,MAAAjH,GAGT,OAAA+F,EAAAtG,KAAAX,KAAAmI,KAgDAC,CAAAH,IAiBA,SAAAI,EAAAb,EAAAc,GACAtI,KAAAwH,MACAxH,KAAAsI,QAYA,SAAAC,KA5BArB,EAAAsB,SAAA,SAAAhB,GACA,IAAA9E,EAAA,IAAA9C,MAAAa,UAAAC,OAAA,GACA,GAAAD,UAAAC,OAAA,EACA,QAAAH,EAAA,EAAuBA,EAAAE,UAAAC,OAAsBH,IAC7CmC,EAAAnC,EAAA,GAAAE,UAAAF,GAGAqH,EAAAtG,KAAA,IAAA+G,EAAAb,EAAA9E,IACA,IAAAkF,EAAAlH,QAAAmH,GACAN,EAAAS,IASAK,EAAAnI,UAAAsF,IAAA,WACAxF,KAAAwH,IAAA5G,MAAA,KAAAZ,KAAAsI,QAEApB,EAAAuB,MAAA,UACAvB,EAAAwB,SAAA,EACAxB,EAAAyB,IAAA,GACAzB,EAAA0B,KAAA,GACA1B,EAAAnE,QAAA,GACAmE,EAAA2B,SAAA,GAIA3B,EAAA4B,GAAAP,EACArB,EAAA6B,YAAAR,EACArB,EAAA8B,KAAAT,EACArB,EAAA+B,IAAAV,EACArB,EAAAgC,eAAAX,EACArB,EAAAiC,mBAAAZ,EACArB,EAAAkC,KAAAb,EACArB,EAAAmC,gBAAAd,EACArB,EAAAoC,oBAAAf,EAEArB,EAAAqC,UAAA,SAAAC,GAAqC,UAErCtC,EAAAuC,QAAA,SAAAD,GACA,UAAAnC,MAAA,qCAGAH,EAAAwC,IAAA,WAA2B,WAC3BxC,EAAAyC,MAAA,SAAAC,GACA,UAAAvC,MAAA,mCAEAH,EAAA2C,MAAA,WAA4B,4CCvL5B7K,EAAAC,EAAAC,EAAA,sBAAA4K,IAAA9K,EAAAC,EAAAC,EAAA,sBAAA6K,IAAA,IAAAjI,EAAA9C,EAAA,KAAA+C,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAA,KAAAgL,EAAAhL,EAAA,KAAAiL,EAAAjL,EAAA,KAAAkL,EAAAlL,EAAA,KAOA8K,EAAA,WACA,SAAAA,IAEA9J,KAAAmK,qBAAA,EAEAnK,KAAAoK,gBAAA,GAEApK,KAAAqK,iBAAA,GAEArK,KAAAsK,aAAA,GAEAtK,KAAAuK,MAAA,GAEAvK,KAAAwK,MAAA,GAEAxK,KAAAyK,OAAA,GAEAzK,KAAA0K,SAAA,GAgRA,OA1QAZ,EAAA5J,UAAAyK,iBAAA,SAAAhH,GACA3D,KAAAoK,gBAAA9I,KAAAqC,IAKAmG,EAAA5J,UAAA0K,kBAAA,SAAAjH,GAEA,OADA3D,KAAAqK,iBAAA/I,KAAAqC,GACA3D,MAKA8J,EAAA5J,UAAA2K,sBAAA,WACA,IAAAC,EAAA9K,KACAA,KAAAmK,sBACAnK,KAAAmK,qBAAA,EACA1C,WAAA,WACAqD,EAAAV,gBAAAW,QAAA,SAAApH,GACAA,EAAAmH,KAEAA,EAAAX,qBAAA,MAOAL,EAAA5J,UAAA8K,uBAAA,SAAAC,EAAA1G,EAAAR,EAAAmH,GACA,IAAAJ,EAAA9K,KAEA,YADA,IAAAkL,IAA+BA,EAAA,GAC/B,IAAmBnJ,EAAA,EAAW,SAAAoJ,EAAAC,GAC9B,IAAAC,EAAAJ,EAAAC,GAEA,UAAA3G,GAAA,mBAAA8G,EACAF,EAAA5G,OAEA,CACA,IAAA+G,EAAAD,EAAuCvJ,EAAA,EAAgB,GAAGyC,GAAAR,GACtCtE,OAAAuC,EAAA,EAAAvC,CAAU6L,GAC9BA,EACAC,KAAA,SAAAC,GAAgD,OAAAV,EAAAE,uBAAAC,EAAAO,EAAAzH,EAAAmH,EAAA,GAAAK,KAAAJ,KAChDM,MAAAL,GAGAN,EAAAE,uBAAAC,EAAAK,EAAAvH,EAAAmH,EAAA,GACAK,KAAAJ,GACAM,MAAAL,OAQAtB,EAAA5J,UAAAwL,QAAA,SAAAC,GAGA,OAFA3L,KAAAuK,MAAqB9K,OAAAuK,EAAA,EAAAvK,CAASkM,GAC9B3L,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAA0L,QAAA,SAAAC,GAGA,OAFA7L,KAAAwK,MAAqB1I,EAAA,EAAgB,GAAG9B,KAAAwK,MAAc/K,OAAAuK,EAAA,EAAAvK,CAASoM,IAC/D7L,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAA4L,OAAA,SAAAC,EAAAxK,GACA,IAAAkB,EAGA,OAFAzC,KAAAwK,MAAqB1I,EAAA,EAAgB,GAAG9B,KAAAwK,QAAA/H,EAAA,IAAsBsJ,GAAYtM,OAAAuK,EAAA,EAAAvK,CAAS8B,GAAAkB,IACnFzC,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAA8L,UAAA,SAAAC,GAGA,OAFAjM,KAAAyK,OAAsB3I,EAAA,EAAgB,GAAG9B,KAAAyK,OAAehL,OAAAuK,EAAA,EAAAvK,CAASwM,IACjEjM,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAAgM,SAAA,SAAAH,EAAAE,GACA,IAAAxJ,EAGA,OAFAzC,KAAAyK,OAAsB3I,EAAA,EAAgB,GAAG9B,KAAAyK,SAAAhI,EAAA,IAAuBsJ,GAAYtM,OAAAuK,EAAA,EAAAvK,CAASwM,GAAAxJ,IACrFzC,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAAiM,eAAA,SAAAC,GAGA,OAFApM,KAAAqM,aAA4B5M,OAAAuK,EAAA,EAAAvK,CAAS2M,GACrCpM,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAAoM,SAAA,SAAAjI,GAGA,OAFArE,KAAAuM,OAAsB9M,OAAAuK,EAAA,EAAAvK,CAAS4E,GAC/BrE,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAAsM,eAAA,SAAAC,GAGA,OAFAzM,KAAA0M,aAAAD,EACAzM,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAAyM,WAAA,SAAAnD,EAAAoD,GAGA,OAFA5M,KAAA0K,SAAAlB,GAAAoD,EAAwCnN,OAAAuK,EAAA,EAAAvK,CAASmN,QAAAvJ,EACjDrD,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAA2M,QAAA,SAAA5G,GAGA,OAFAjG,KAAA8M,MAAA7G,EACAjG,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAA6M,UAAA,WACA,IAAA9G,EAAA,IAAuBiE,EAAA,EAEvB,OADAlK,KAAA6M,QAAA5G,GACAA,GAMA6D,EAAA5J,UAAAgG,QAAA,WACA,OAAAlG,KAAA8M,OAMAhD,EAAAxG,MAAA,SAAAlB,GACA,IAAA4K,EAAA,IAAAlD,EAgBA,OAfArK,OAAAW,OAAA4M,EAAA5K,EAAA,CACAgI,gBAAA,KAEAhI,IACA4K,EAAA1C,aAAoCxI,EAAA,EAAgBM,EAAAkI,cACpD0C,EAAAxC,MAA6B1I,EAAA,EAAgB,GAAGM,EAAAoI,OAChDwC,EAAAvC,OAA8B3I,EAAA,EAAgB,GAAGM,EAAAqI,QACjDuC,EAAAtC,SAAgC5I,EAAA,EAAgB,GAAGM,EAAAsI,UACnDsC,EAAAzC,MAAAnI,EAAAmI,MACAyC,EAAAT,OAAAnK,EAAAmK,OACAS,EAAAF,MAAA1K,EAAA0K,MACAE,EAAAN,aAAAtK,EAAAsK,aACAM,EAAAX,aAAAjK,EAAAiK,aACAW,EAAA3C,iBAAwCvI,EAAA,EAAgBM,EAAAiI,mBAExD2C,GAKAlD,EAAA5J,UAAA+M,MAAA,WAWA,OAVAjN,KAAAsK,aAAA,GACAtK,KAAAwK,MAAA,GACAxK,KAAAyK,OAAA,GACAzK,KAAAuK,MAAA,GACAvK,KAAA0K,SAAA,GACA1K,KAAAuM,YAAAlJ,EACArD,KAAA0M,kBAAArJ,EACArD,KAAAqM,kBAAAhJ,EACArD,KAAA8M,WAAAzJ,EACArD,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAAuE,cAAA,SAAAC,EAAAK,GACA,IAAAC,GAAA,IAAAC,MAAAC,UAAA,IACAC,EAA+BrD,EAAA,EAAgB,CAAEkD,aAAuBN,GAMxE,OALA1E,KAAAsK,kBACAjH,IAAA0B,MAAA,EACkBjD,EAAA,EAAgB9B,KAAAsK,aAAA,CAAqB7K,OAAAuK,EAAA,EAAAvK,CAAS0F,KAAA+H,OAAAnI,GAC9CjD,EAAA,EAAgB9B,KAAAsK,aAAA,CAAqB7K,OAAAuK,EAAA,EAAAvK,CAAS0F,KAChEnF,KAAA6K,wBACA7K,MAKA8J,EAAA5J,UAAAiN,iBAAA,WAGA,OAFAnN,KAAAsK,aAAA,GACAtK,KAAA6K,wBACA7K,MAMA8J,EAAA5J,UAAAkN,kBAAA,SAAA7I,GAEAA,EAAA6H,YAAA7H,EAAA6H,YACAxM,MAAAyN,QAAA9I,EAAA6H,aACA7H,EAAA6H,YACA,CAAA7H,EAAA6H,aACA,GAEApM,KAAAqM,eACA9H,EAAA6H,YAAA7H,EAAA6H,YAAA3K,OAAAzB,KAAAqM,eAGA9H,EAAA6H,cAAA7H,EAAA6H,YAAA1L,eACA6D,EAAA6H,aAYAtC,EAAA5J,UAAAoN,aAAA,SAAA/I,EAAAR,GA0BA,OAzBA/D,KAAAyK,QAAAhL,OAAA8N,KAAAvN,KAAAyK,QAAA/J,SACA6D,EAAA0H,MAA0BnK,EAAA,EAAgB,GAAG9B,KAAAyK,OAAAlG,EAAA0H,QAE7CjM,KAAAwK,OAAA/K,OAAA8N,KAAAvN,KAAAwK,OAAA9J,SACA6D,EAAAsH,KAAyB/J,EAAA,EAAgB,GAAG9B,KAAAwK,MAAAjG,EAAAsH,OAE5C7L,KAAAuK,OAAA9K,OAAA8N,KAAAvN,KAAAuK,OAAA7J,SACA6D,EAAAoH,KAAyB7J,EAAA,EAAgB,GAAG9B,KAAAuK,MAAAhG,EAAAoH,OAE5C3L,KAAA0K,UAAAjL,OAAA8N,KAAAvN,KAAA0K,UAAAhK,SACA6D,EAAAiJ,SAA6B1L,EAAA,EAAgB,GAAG9B,KAAA0K,SAAAnG,EAAAiJ,WAEhDxN,KAAAuM,SACAhI,EAAAF,MAAArE,KAAAuM,QAEAvM,KAAA0M,eACAnI,EAAAkI,YAAAzM,KAAA0M,cAEA1M,KAAA8M,QACAvI,EAAAiJ,SAAAjJ,EAAAiJ,UAAA,GACAjJ,EAAAiJ,SAAAC,MAAAzN,KAAA8M,OAEA9M,KAAAoN,kBAAA7I,GACAA,EAAAmJ,YAA4B5L,EAAA,EAAgByC,EAAAmJ,aAAA,GAAA1N,KAAAsK,cAC5C/F,EAAAmJ,YAAAnJ,EAAAmJ,YAAAhN,OAAA,EAAA6D,EAAAmJ,iBAAArK,EACArD,KAAAgL,uBAA2ClJ,EAAA,EAAgB6L,IAAA3N,KAAAqK,kBAAA9F,EAAAR,IAE3D+F,EAjSA,GAuSA,SAAA6D,IACA,IAAAC,EAAiBnO,OAAAwK,EAAA,EAAAxK,GAGjB,OAFAmO,EAAArH,WAAAqH,EAAArH,YAAA,GACAqH,EAAArH,WAAAsH,sBAAAD,EAAArH,WAAAsH,uBAAA,GACAD,EAAArH,WAAAsH,sBAMO,SAAA9D,EAAApG,GACPgK,IAAArM,KAAAqC,sCCzTA3E,EAAAC,EAAAC,EAAA,sBAAA4O,IAAA,IAAAC,EAAA/O,EAAA,KACOgP,EAAA,4DAIPF,EAAA,WACA,SAAAA,EAAAG,EAAAC,EAAAC,EAAAC,QACA,IAAAH,IAAkCA,EAAYxO,OAAAsO,EAAA,EAAAtO,SAC9C,IAAAyO,IAAiCA,EAAWzO,OAAAsO,EAAA,EAAAtO,GAAK4O,UAAA,UACjD,IAAAF,IAAmCA,GAAA,GACnCnO,KAAAiO,WACAjO,KAAAkO,UACAlO,KAAAmO,YACAnO,KAAAoO,UA8BA,OAxBAN,EAAAQ,gBAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,MAAAT,GACA,GAAAQ,EAAA,CACA,IAAAE,EAAA,IAAAZ,EAAAU,EAAA,GAAAA,EAAA,UAAAA,EAAA,IACA,WAAAV,EAAAU,EAAA,QAAAnL,SAAAqL,KAOAZ,EAAA5N,UAAAkG,cAAA,WACA,YAAApG,KAAAiO,SAAA,IAAAjO,KAAAkO,QAAA,KAAAlO,KAAAmO,UAAA,YAKAL,EAAA5N,UAAAyO,OAAA,WACA,OACAC,OAAA5O,KAAAoO,SAAApO,KAAAoO,QAAAO,eAAAtL,EACAwL,QAAA7O,KAAAkO,QACAY,SAAA9O,KAAAiO,WAGAH,EAtCA,sBCLApM,EAAAyF,QAAA,SAAA4H,GACA,IAAAA,EAAAC,gBAAA,CACA,IAAAtN,EAAAjC,OAAAU,OAAA4O,GAEArN,EAAAuN,WAAAvN,EAAAuN,SAAA,IACAxP,OAAAyP,eAAAxN,EAAA,UACAyN,YAAA,EACAC,IAAA,WACA,OAAA1N,EAAA2N,KAGA5P,OAAAyP,eAAAxN,EAAA,MACAyN,YAAA,EACAC,IAAA,WACA,OAAA1N,EAAAnB,KAGAd,OAAAyP,eAAAxN,EAAA,WACAyN,YAAA,IAEAzN,EAAAsN,gBAAA,EAEA,OAAAtN,qCCfO,SAAA4N,EAAAC,GACP,OAAA9P,OAAAS,UAAAsP,SAAA7O,KAAA4O,IACA,qBAEA,yBAEA,4BACA,SACA,QACA,OAAAA,aAAAlI,OAUO,SAAAoI,EAAAF,GACP,8BAAA9P,OAAAS,UAAAsP,SAAA7O,KAAA4O,GASO,SAAAG,EAAAH,GACP,4BAAA9P,OAAAS,UAAAsP,SAAA7O,KAAA4O,GASO,SAAAI,EAAAJ,GACP,gCAAA9P,OAAAS,UAAAsP,SAAA7O,KAAA4O,GASO,SAAAK,EAAAL,GACP,0BAAA9P,OAAAS,UAAAsP,SAAA7O,KAAA4O,GASO,SAAAM,EAAAN,GACP,cAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EASO,SAAAO,EAAAP,GACP,0BAAA9P,OAAAS,UAAAsP,SAAA7O,KAAA4O,GASO,SAAAQ,EAAAR,GACP,0BAAA9P,OAAAS,UAAAsP,SAAA7O,KAAA4O,GAMO,SAAAS,EAAAT,GAEP,OAAAU,QAAAV,KAAAhE,MAAA,mBAAAgE,EAAAhE,MAUO,SAAA2E,EAAAX,GAEP,OAAAO,EAAAP,IAAA,gBAAAA,GAAA,mBAAAA,GAAA,oBAAAA,EA3GAvQ,EAAAC,EAAAC,EAAA,sBAAAoQ,IAAAtQ,EAAAC,EAAAC,EAAA,sBAAAuQ,IAAAzQ,EAAAC,EAAAC,EAAA,sBAAAwQ,IAAA1Q,EAAAC,EAAAC,EAAA,sBAAAyQ,IAAA3Q,EAAAC,EAAAC,EAAA,sBAAA0Q,IAAA5Q,EAAAC,EAAAC,EAAA,sBAAA2Q,IAAA7Q,EAAAC,EAAAC,EAAA,sBAAA4Q,IAAA9Q,EAAAC,EAAAC,EAAA,sBAAA6Q,IAAA/Q,EAAAC,EAAAC,EAAA,sBAAA8Q,IAAAhR,EAAAC,EAAAC,EAAA,sBAAAgR,uCCAA,SAAAhJ,EAAA0G,GAKO,SAAAuC,EAAAC,EAAAC,GAEP,OAAAD,EAAAE,QAAAD,GAPArR,EAAAC,EAAAC,EAAA,sBAAAiR,IAAAnR,EAAAC,EAAAC,EAAA,sBAAAqR,IAAAvR,EAAAC,EAAAC,EAAA,sBAAAsR,IAAAxR,EAAAC,EAAAC,EAAA,sBAAAuR,IAAAzR,EAAAC,EAAAC,EAAA,sBAAAwR,IAAA1R,EAAAC,EAAAC,EAAA,sBAAAyR,IAAA3R,EAAAC,EAAAC,EAAA,sBAAA0R,IAkBA,IAAAC,EAAA,GAMO,SAAAN,IACP,MATA,qBAAA9Q,OAAAS,UAAAsP,SAAA7O,UAAA,IAAAuG,IAAA,GAUA0G,EACA,oBAAAkD,OACAA,OACA,oBAAAC,KACAA,KACAF,EAOO,SAAAL,IACP,IAAA5C,EAAA2C,IACAS,EAAApD,EAAAoD,QAAApD,EAAAqD,SACA,YAAAD,KAAAE,gBAAA,CAEA,IAAAC,EAAA,IAAAC,YAAA,GACAJ,EAAAE,gBAAAC,GAGAA,EAAA,QAAAA,EAAA,SAGAA,EAAA,SAAAA,EAAA,SACA,IAAAE,EAAA,SAAAC,GAEA,IADA,IAAAC,EAAAD,EAAA9B,SAAA,IACA+B,EAAA7Q,OAAA,GACA6Q,EAAA,IAAAA,EAEA,OAAAA,GAEA,OAAAF,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAGA,yCAAAK,QAAA,iBAAAC,GAEA,IAAAxQ,EAAA,GAAAoE,KAAAqM,SAAA,EAGA,OADA,MAAAD,EAAAxQ,EAAA,EAAAA,EAAA,GACAuO,SAAA,MAUO,SAAAiB,EAAAkB,GACP,IAAAA,EACA,SAEA,IAAAlD,EAAAkD,EAAAlD,MAAA,kEACA,IAAAA,EACA,SAGA,IAAAmD,EAAAnD,EAAA,OACAoD,EAAApD,EAAA,OACA,OACAqD,KAAArD,EAAA,GACAsD,KAAAtD,EAAA,GACAuD,SAAAvD,EAAA,GACAwD,SAAAxD,EAAA,GAAAmD,EAAAC,GAOO,SAAAnB,EAAAnM,GACP,GAAAA,EAAAH,QACA,OAAAG,EAAAH,QAEA,GAAAG,EAAAT,WAAAS,EAAAT,UAAAoO,QAAA3N,EAAAT,UAAAoO,OAAA,IACA,IAAApO,EAAAS,EAAAT,UAAAoO,OAAA,GACA,OAAApO,EAAAqO,MAAArO,EAAAvC,MACAuC,EAAAqO,KAAA,KAAArO,EAAAvC,MAEAuC,EAAAqO,MAAArO,EAAAvC,OAAAgD,EAAAL,UAAA,YAEA,OAAAK,EAAAL,UAAA,YAGO,SAAAyM,EAAAhN,GACP,IAAAiK,EAAA2C,IAEA,iBAAA3C,GACA,OAAAjK,IAEA,IAAAyO,EAAAxE,EAAAyE,QACAC,EAAA,GALA,+CAOAvH,QAAA,SAAA1G,GACAA,KAAAuJ,EAAAyE,SAAAD,EAAA/N,GAAAkO,aACAD,EAAAjO,GAAA+N,EAAA/N,GAAAmO,mBACAJ,EAAA/N,GAAA+N,EAAA/N,GAAAoO,uBAIA,IAAAnH,EAAA3H,IAKA,OAHAlE,OAAA8N,KAAA+E,GAAAvH,QAAA,SAAA1G,GACA+N,EAAA/N,GAAAiO,EAAAjO,KAEAiH,EAUO,SAAAsF,EAAArM,EAAAhD,EAAA4Q,EAAAO,QACP,IAAAA,IAA+BA,EAAA,CAC/BC,SAAA,EACAR,KAAA,YAEA5N,EAAAT,UAAAS,EAAAT,WAAA,GACAS,EAAAT,UAAAoO,OAAA3N,EAAAT,UAAAoO,QAAA,GACA3N,EAAAT,UAAAoO,OAAA,GAAA3N,EAAAT,UAAAoO,OAAA,OACA3N,EAAAT,UAAAoO,OAAA,GAAA3Q,MAAAgD,EAAAT,UAAAoO,OAAA,GAAA3Q,UAAA,GACAgD,EAAAT,UAAAoO,OAAA,GAAAC,KAAA5N,EAAAT,UAAAoO,OAAA,GAAAC,SAAA,QACA5N,EAAAT,UAAAoO,OAAA,GAAAQ,UAAAnO,EAAAT,UAAAoO,OAAA,GAAAQ,0ECzJA1T,EAAAC,EAAAC,EAAA,sBAAA0T,IAIA,IAAAA,EAAA,WACA,SAAAA,IAEA5S,KAAA6S,YAAA,mBAAAC,QACA9S,KAAA+S,OAAA/S,KAAA6S,YAAA,IAAAC,QAAA,GAyCA,OAnCAF,EAAA1S,UAAA8S,QAAA,SAAAC,GACA,GAAAjT,KAAA6S,YACA,QAAA7S,KAAA+S,OAAAG,IAAAD,KAGAjT,KAAA+S,OAAAI,IAAAF,IACA,GAGA,QAAA1S,EAAA,EAAuBA,EAAAP,KAAA+S,OAAArS,OAAwBH,IAAA,CAE/C,GADAP,KAAA+S,OAAAxS,KACA0S,EACA,SAIA,OADAjT,KAAA+S,OAAAzR,KAAA2R,IACA,GAMAL,EAAA1S,UAAAkT,UAAA,SAAAH,GACA,GAAAjT,KAAA6S,YACA7S,KAAA+S,OAAAM,OAAAJ,QAGA,QAAA1S,EAAA,EAA2BA,EAAAP,KAAA+S,OAAArS,OAAwBH,IACnD,GAAAP,KAAA+S,OAAAxS,KAAA0S,EAAA,CACAjT,KAAA+S,OAAAO,OAAA/S,EAAA,GACA,QAKAqS,EA7CA,qCCJA5T,EAAAC,EAAAC,EAAA,sBAAAqU,IAAA,IAEAC,EAFAC,EAAAzU,EAAA,MAGA,SAAAwU,GAEAA,EAAA,kBAEAA,EAAA,oBAEAA,EAAA,oBANA,CAOCA,MAAA,KAED,IAAAD,EAAA,WACA,SAAAA,EAAA5P,GACA,IAAAmH,EAAA9K,KAEAA,KAAA0T,OAAAF,EAAAG,QAEA3T,KAAA4T,UAAA,GAEA5T,KAAA6T,SAAA,SAAAtS,GACAuJ,EAAAgJ,WAAAvS,EAAAiS,EAAAO,WAGA/T,KAAAgU,QAAA,SAAAC,GACAnJ,EAAAgJ,WAAAG,EAAAT,EAAAU,WAGAlU,KAAA8T,WAAA,SAAAvS,EAAA4S,GACArJ,EAAA4I,SAAAF,EAAAG,UAGgBlU,OAAAgU,EAAA,EAAAhU,CAAU8B,GAC1BA,EAAAgK,KAAAT,EAAA+I,SAAA/I,EAAAkJ,UAGAlJ,EAAAsJ,OAAA7S,EACAuJ,EAAA4I,OAAAS,EACArJ,EAAAuJ,sBAGArU,KAAAqU,iBAAA,WACAvJ,EAAA4I,SAAAF,EAAAG,UAGA7I,EAAA4I,SAAAF,EAAAU,SAEApJ,EAAA8I,UAAA7I,QAAA,SAAAuJ,GAAsD,OAAAA,EAAAC,QAAAD,EAAAC,OAAAzJ,EAAAsJ,UAItDtJ,EAAA8I,UAAA7I,QAAA,SAAAuJ,GAAsD,OAAAA,EAAAE,WAAAF,EAAAE,UAAA1J,EAAAsJ,UAEtDtJ,EAAA8I,UAAA,KAIA5T,KAAAyU,eAAA,SAAAC,GACA5J,EAAA8I,UAAA9I,EAAA8I,UAAAnS,OAAAiT,GACA5J,EAAAuJ,oBAEA,IACA1Q,EAAA3D,KAAA6T,SAAA7T,KAAAgU,SAEA,MAAA9S,GACAlB,KAAAgU,QAAA9S,IA6DA,OAzDAqS,EAAArT,UAAAqL,KAAA,SAAAoJ,EAAAC,GACA,IAAA9J,EAAA9K,KAEA,WAAAuT,EAAA,SAAApI,EAAAC,GACAN,EAAA2J,eAAA,CACAF,OAAA,SAAAN,GACA,GAAAW,EAIA,IAEA,YADAzJ,EAAAyJ,EAAAX,IAGA,MAAA/S,GAEA,YADAkK,EAAAlK,QARAkK,EAAA6I,IAYAO,UAAA,SAAAlJ,GACA,GAAAqJ,EAIA,IAEA,YADAxJ,EAAAwJ,EAAArJ,IAGA,MAAApK,GAEA,YADAkK,EAAAlK,QARAiK,EAAAG,SAgBAiI,EAAArT,UAAAuL,MAAA,SAAA8I,GAEA,OAAAvU,KAAAuL,KAAA,SAAAsJ,GAAyC,OAAAA,GAAcN,IAGvDhB,EAAArT,UAAAsP,SAAA,WACA,8BAGA+D,EAAApI,QAAA,SAAA5J,GACA,WAAAgS,EAAA,SAAApI,GACAA,EAAA5J,MAIAgS,EAAAnI,OAAA,SAAA6I,GACA,WAAAV,EAAA,SAAAuB,EAAA1J,GACAA,EAAA6I,MAGAV,EAlHA,sCCZA,SAAA3F,GAAA5O,EAAAC,EAAAC,EAAA,sBAAA6V,IAAA/V,EAAAC,EAAAC,EAAA,sBAAA8V,IAAAhW,EAAAC,EAAAC,EAAA,sBAAA+V,IAAAjW,EAAAC,EAAAC,EAAA,sBAAAgW,IAAA,IAAAzB,EAAAzU,EAAA,KAAAmW,EAAAnW,EAAA,KAUO,SAAA+V,EAAAK,EAAA5L,EAAA6L,GACP,GAAA7L,KAAA4L,EAAA,CAGA,IAAAE,EAAAF,EAAA5L,GACA+L,EAAAF,EAAAC,GAIA,sBAAAC,EACA,IACAA,EAAArV,UAAAqV,EAAArV,WAAA,GACAT,OAAA+V,iBAAAD,EAAA,CACAhD,WAAA,CACApD,YAAA,EACA5N,OAAA,GAEAkR,oBAAA,CACAtD,YAAA,EACA5N,MAAA+T,GAEA9C,mBAAA,CACArD,YAAA,EACA5N,MAAAgU,KAIA,MAAAxO,IAKAqO,EAAA5L,GAAA+L,GAQO,SAAAP,EAAAS,GACP,OAAAhW,OAAA8N,KAAAkI,GACAC,IAEA,SAAA3J,GAAoB,OAAA4J,mBAAA5J,GAAA,IAAA4J,mBAAAF,EAAA1J,MACpB6J,KAAA,KA+BA,SAAAC,EAAAtU,GACA,OANA,SAAAA,GAEA,QAAAuU,UAAAvU,GAAAwU,MAAA,SAAArV,OAIAsV,CAAAC,KAAAC,UAAA3U,IAGO,SAAA0T,EAAAQ,EAEPU,EAEAC,QACA,IAAAD,IAA2BA,EAAA,QAC3B,IAAAC,IAA6BA,EAAA,QAC7B,IAAAC,EAAAnB,EAAAO,EAAAU,GACA,OAAAN,EAAAQ,GAAAD,EACAnB,EAAAQ,EAAAU,EAAA,EAAAC,GAEAC,EA2BA,SAAAC,EAAA/U,EAAAwK,GACA,iBAAAA,GAAA,iBAAAxK,KAAAgV,QACA,WAEA,kBAAAxK,EACA,uBAEA,IAAA6B,GAAArM,IAAAqM,EACA,WAEA,oBAAAkD,QAAAvP,IAAAuP,OACA,WAEA,oBAAA0F,UAAAjV,IAAAiV,SACA,aAGA,oBAAAC,OAAAlV,aAAAkV,MACAhX,OAAAiX,eAAAnV,KAAAtB,YAAAuJ,KAAA,QAGQ/J,OAAAgU,EAAA,EAAAhU,CAAgB8B,GACxB,mBAEAoV,OAAAC,MAAArV,GACA,aAEA,IAAAA,EACA,cAEA,mBAAAA,EACA,eAAAA,EAAAiI,MAAA,+BAEAjI,EAUO,SAAAsV,EAAA9K,EAAAxK,EAAA4U,EAAAW,GAIP,QAHA,IAAAX,IAA2BA,EAAAY,UAC3B,IAAAD,IAA0BA,EAAA,IAAY3B,EAAA,GAEtC,IAAAgB,EACA,OAxEA,SAAA5U,GACA,IAAA4Q,EAAA1S,OAAAS,UAAAsP,SAAA7O,KAAAY,GAEA,oBAAAA,EACA,OAAAA,EAEA,uBAAA4Q,EACA,iBAEA,sBAAAA,EACA,gBAEA,IAAA6E,EAAAV,EAAA/U,GACA,OAAW9B,OAAAgU,EAAA,EAAAhU,CAAWuX,KAAA7E,EA2DtB8E,CAAA1V,GAIA,GAAAA,SAAA,mBAAAA,EAAAoN,OACA,OAAApN,EAAAoN,SAIA,IAAAqI,EAAAV,EAAA/U,EAAAwK,GACA,GAAQtM,OAAAgU,EAAA,EAAAhU,CAAWuX,GACnB,OAAAA,EAGA,IAAA5B,EAAkB3V,OAAAgU,EAAA,EAAAhU,CAAO8B,GA5HzB,SAAAC,GAEA,IAAA0V,EAAA,CACA9S,QAAA5C,EAAA4C,QACAoF,KAAAhI,EAAAgI,KACAtG,MAAA1B,EAAA0B,OAEA,QAAA3C,KAAAiB,EACA/B,OAAAS,UAAAJ,eAAAa,KAAAa,EAAAjB,KACA2W,EAAA3W,GAAAiB,EAAAjB,IAGA,OAAA2W,EAgHyBC,CAAA5V,KAEzB6V,EAAAxX,MAAAyN,QAAA9L,GAAA,MAEA,GAAAuV,EAAA9D,QAAAzR,GACA,qBAGA,QAAA8V,KAAAjC,EAEA3V,OAAAS,UAAAJ,eAAAa,KAAAyU,EAAAiC,KAIAD,EAAAC,GAAAR,EAAAQ,EAAAjC,EAAAiC,GAAAlB,EAAA,EAAAW,IAKA,OAFAA,EAAA1D,UAAA7R,GAEA6V,EAcO,SAAAlC,EAAAoC,EAAAnB,GACP,IAEA,OAAAF,KAAAsB,MAAAtB,KAAAC,UAAAoB,EAAA,SAAAvL,EAAAxK,GAAuE,OAAAsV,EAAA9K,EAAAxK,EAAA4U,MAEvE,MAAAtQ,GACA,oFCrOA7G,EAAAC,EAAAC,EAAA,sBAAAsY,IAAA,IAAAC,EAAAzY,EAAA,KAEA4O,EAAanO,OAAAgY,EAAA,EAAAhY,GAEbiY,EAAA,iBAEAC,EAAA,WAEA,SAAAA,IACA3X,KAAA4X,UAAA,EAiDA,OA9CAD,EAAAzX,UAAA2X,QAAA,WACA7X,KAAA4X,UAAA,GAGAD,EAAAzX,UAAA4X,OAAA,WACA9X,KAAA4X,UAAA,GAGAD,EAAAzX,UAAA6X,IAAA,WAEA,IADA,IAAArV,EAAA,GACAC,EAAA,EAAwBA,EAAAlC,UAAAC,OAAuBiC,IAC/CD,EAAAC,GAAAlC,UAAAkC,GAEA3C,KAAA4X,UAGQnY,OAAAgY,EAAA,EAAAhY,CAAc,WACtBmO,EAAAyE,QAAA0F,IAAAL,EAAA,UAAAhV,EAAAkT,KAAA,SAIA+B,EAAAzX,UAAA4F,KAAA,WAEA,IADA,IAAApD,EAAA,GACAC,EAAA,EAAwBA,EAAAlC,UAAAC,OAAuBiC,IAC/CD,EAAAC,GAAAlC,UAAAkC,GAEA3C,KAAA4X,UAGQnY,OAAAgY,EAAA,EAAAhY,CAAc,WACtBmO,EAAAyE,QAAAvM,KAAA4R,EAAA,WAAAhV,EAAAkT,KAAA,SAIA+B,EAAAzX,UAAAsB,MAAA,WAEA,IADA,IAAAkB,EAAA,GACAC,EAAA,EAAwBA,EAAAlC,UAAAC,OAAuBiC,IAC/CD,EAAAC,GAAAlC,UAAAkC,GAEA3C,KAAA4X,UAGQnY,OAAAgY,EAAA,EAAAhY,CAAc,WACtBmO,EAAAyE,QAAA7Q,MAAAkW,EAAA,YAAAhV,EAAAkT,KAAA,SAGA+B,EApDA,GAuDA/J,EAAArH,WAAAqH,EAAArH,YAAA,GACA,IAAAiR,EAAA5J,EAAArH,WAAAiR,SAAA5J,EAAArH,WAAAiR,OAAA,IAAAG,whBC7DOK,ECAAC,YDCP,SAAAD,GAEAA,EAAA,cAEAA,EAAA,cAEAA,EAAA,kBAEAA,EAAA,UAEAA,EAAA,YAEAA,EAAA,cAEAA,EAAA,oBAdA,CAeCA,MAAA,KAGD,SAAAA,GA2BAA,EAAAE,WApBA,SAAA7T,GACA,OAAAA,GACA,YACA,OAAA2T,EAAAG,MACA,WACA,OAAAH,EAAAI,KACA,WACA,cACA,OAAAJ,EAAAK,QACA,YACA,OAAAL,EAAA3Q,MACA,YACA,OAAA2Q,EAAAM,MACA,eACA,OAAAN,EAAAO,SACA,UACA,QACA,OAAAP,EAAAQ,MAxBA,CA4BCR,MAAA,KC9CD,SAAAC,GAEAA,EAAA,kBAEAA,EAAA,kBAEAA,EAAA,kBAEAA,EAAA,uBAEAA,EAAA,kBAEAA,EAAA,gBAZA,CAaCA,MAAA,KAGD,SAAAA,GAsBAA,EAAAQ,aAfA,SAAAC,GACA,OAAAA,GAAA,KAAAA,EAAA,IACAT,EAAAU,QAEA,MAAAD,EACAT,EAAAW,UAEAF,GAAA,KAAAA,EAAA,IACAT,EAAAY,QAEAH,GAAA,IACAT,EAAAa,OAEAb,EAAAc,SApBA,CAuBCd,MAAA,kBClCD,SAAAe,EAAAxW,GAEA,IADA,IAAAE,EAAA,GACAC,EAAA,EAAoBA,EAAAlC,UAAAC,OAAuBiC,IAC3CD,EAAAC,EAAA,GAAAlC,UAAAkC,GAEA,IAAA6D,EAAc/G,OAAAwZ,EAAA,EAAAxZ,GACd,GAAA+G,KAAAhE,GAEA,OAAAgE,EAAAhE,GAAA5B,MAAA4F,EAAsC0S,EAAA,EAAgBxW,IAEtD,UAAA2E,MAAA,qBAAA7E,EAAA,wDAQO,SAAAqB,EAAAC,GACP,IAAAqV,EACA,IACA,UAAA9R,MAAA,6BAEA,MAAAvD,GACAqV,EAAArV,EAEA,OAAAkV,EAAA,mBAAAlV,EAAA,CACAsV,kBAAAtV,EACAqV,uBAUO,SAAAhV,EAAAC,EAAAC,GACP,IAAA8U,EACA,IACA,UAAA9R,MAAAjD,GAEA,MAAAN,GACAqV,EAAArV,EAEA,OAAAkV,EAAA,iBAAA5U,EAAAC,EAAA,CACA+U,kBAAAhV,EACA+U,uBASO,SAAA7U,EAAAC,GACP,OAAAyU,EAAA,eAAAzU,GAUO,SAAAE,EAAAC,GACPsU,EAAA,gBAAAtU,GAMO,SAAAa,EAAA5B,GACPqV,EAAA,iBAAArV,GAeO,SAAAD,EAAAC,GACPqV,EAAA,YAAArV,OCnGA0V,WAEAC,EAAA,WACA,SAAAA,IAIAtZ,KAAAwJ,KAAA8P,EAAAvT,GAqBA,OAhBAuT,EAAApZ,UAAAqZ,UAAA,WACAF,EAAAG,SAAAtZ,UAAAsP,SACAgK,SAAAtZ,UAAAsP,SAAA,WAEA,IADA,IAAA9M,EAAA,GACAC,EAAA,EAA4BA,EAAAlC,UAAAC,OAAuBiC,IACnDD,EAAAC,GAAAlC,UAAAkC,GAEA,IAAAiK,EAAA5M,KAAAuS,WAAAvS,KAAAyS,oBAAAzS,KAEA,OAAAqZ,EAAAzY,MAAAgM,EAAAlK,KAMA4W,EAAAvT,GAAA,mBACAuT,EA1BA,8BCMO,SAAAG,EAAAC,EAAAC,GAGP,YAFA,IAAAA,IAAyBA,EAAA,GAEzB,iBAAAD,GAAA,IAAAC,EACAD,EAEAA,EAAAhZ,QAAAiZ,EAAAD,IAAAE,OAAA,EAAAD,GAAA,MA6CO,SAAAE,EAAAvC,EAAAwC,GACP,IAAAla,MAAAyN,QAAAiK,GACA,SAIA,IAFA,IAAAyC,EAAA,GAEAxZ,EAAA,EAAmBA,EAAA+W,EAAA5W,OAAkBH,IAAA,CACrC,IAAAgB,EAAA+V,EAAA/W,GACA,IACAwZ,EAAAzY,KAAA0Y,OAAAzY,IAEA,MAAAL,GACA6Y,EAAAzY,KAAA,iCAGA,OAAAyY,EAAAnE,KAAAkE,GAGO,SAAAG,EAAA1M,EAAA2M,GAEP,QADA,IAAAA,IAA+BA,EAAA,KAC/B3M,EAAA7M,OACA,6BAEA,GAAA6M,EAAA,GAAA7M,QAAAwZ,EACA,OAAAT,EAAAlM,EAAA,GAAA2M,GAEA,QAAAC,EAAA5M,EAAA7M,OAAwCyZ,EAAA,EAAkBA,IAAA,CAC1D,IAAA9D,EAAA9I,EAAAL,MAAA,EAAAiN,GAAAvE,KAAA,MACA,KAAAS,EAAA3V,OAAAwZ,GAGA,OAAAC,IAAA5M,EAAA7M,OACA2V,EAEAoD,EAAApD,EAAA6D,GAEA,SAOO,SAAAE,EAAA7Y,EAAA8Y,GACP,OAAQ5a,OAAA6a,EAAA,EAAA7a,CAAQ4a,GAChBA,EAAAE,KAAAhZ,GAEA,iBAAA8Y,GACA9Y,EAAAiZ,SAAAH,GCtGA,IAAAI,EAAA,sEAEIC,EAAc,WAClB,SAAAC,EAAAC,QACA,IAAAA,IAAkCA,EAAA,IAClC5a,KAAA4a,WAIA5a,KAAAwJ,KAAAmR,EAAA5U,GA4IA,OAvIA4U,EAAAza,UAAAqZ,UAAA,WACQ9Z,OAAAob,EAAA,EAAApb,CAAuB,SAAA8E,GAC/B,IAAAiC,EAAsB/G,OAAAwZ,EAAA,EAAAxZ,GACtB,IAAA+G,EACA,OAAAjC,EAEA,IAAAwM,EAAAvK,EAAAb,eAAAgV,GACA,GAAA5J,EAAA,CACA,IAAA5O,EAAAqE,EAAAjD,YACAuX,EAAA3Y,IAAAwC,aAAA,GACAoW,EAAAhK,EAAAiK,cAAAF,GACA,GAAA/J,EAAAkK,iBAAA1W,EAAAwW,GACA,YAGA,OAAAxW,KAIAoW,EAAAza,UAAA+a,iBAAA,SAAA1W,EAAAwW,GACA,OAAA/a,KAAAkb,eAAA3W,EAAAwW,IACYvD,EAAA,EAAM1R,KAAA,6DAAqErG,OAAA0b,EAAA,EAAA1b,CAAmB8E,KAC1G,GAEAvE,KAAAob,gBAAA7W,EAAAwW,IACYvD,EAAA,EAAM1R,KAAA,wEAAgFrG,OAAA0b,EAAA,EAAA1b,CAAmB8E,KACrH,GAEAvE,KAAAqb,kBAAA9W,EAAAwW,IACYvD,EAAA,EAAM1R,KAAA,yEAAiFrG,OAAA0b,EAAA,EAAA1b,CAAmB8E,GAAA,WAAAvE,KAAAsb,mBAAA/W,KACtH,IAEAvE,KAAAub,kBAAAhX,EAAAwW,KACYvD,EAAA,EAAM1R,KAAA,6EAAqFrG,OAAA0b,EAAA,EAAA1b,CAAmB8E,GAAA,WAAAvE,KAAAsb,mBAAA/W,KAC1H,IAKAoW,EAAAza,UAAAgb,eAAA,SAAA3W,EAAAwW,GAEA,QADA,IAAAA,IAAiCA,EAAA,KACjCA,EAAAS,eACA,SAEA,IAEA,sBAAAjX,EAAAT,UAAAoO,OAAA,GAAAC,KAEA,MAAAtM,GACA,WAIA8U,EAAAza,UAAAkb,gBAAA,SAAA7W,EAAAwW,GAEA,YADA,IAAAA,IAAiCA,EAAA,OACjCA,EAAAU,eAAAV,EAAAU,aAAA/a,SAGAV,KAAA0b,0BAAAnX,GAAAoX,KAAA,SAAAvX,GAEA,OAAA2W,EAAAU,aAAAE,KAAA,SAAAtB,GAAiE,OAAQD,EAAiBhW,EAAAiW,QAI1FM,EAAAza,UAAAmb,kBAAA,SAAA9W,EAAAwW,GAGA,QAFA,IAAAA,IAAiCA,EAAA,KAEjCA,EAAAa,gBAAAb,EAAAa,cAAAlb,OACA,SAEA,IAAAiR,EAAA3R,KAAAsb,mBAAA/W,GACA,QAAAoN,GAAAoJ,EAAAa,cAAAD,KAAA,SAAAtB,GAA6E,OAAQD,EAAiBzI,EAAA0I,MAGtGM,EAAAza,UAAAqb,kBAAA,SAAAhX,EAAAwW,GAGA,QAFA,IAAAA,IAAiCA,EAAA,KAEjCA,EAAAc,gBAAAd,EAAAc,cAAAnb,OACA,SAEA,IAAAiR,EAAA3R,KAAAsb,mBAAA/W,GACA,OAAAoN,GAAAoJ,EAAAc,cAAAF,KAAA,SAAAtB,GAA4E,OAAQD,EAAiBzI,EAAA0I,MAGrGM,EAAAza,UAAA8a,cAAA,SAAAF,GAEA,YADA,IAAAA,IAAuCA,EAAA,IACvC,CACAc,cAA2B1C,EAAA,EAAgBlZ,KAAA4a,SAAAgB,eAAA,GAAAd,EAAAc,eAAA,IAC3CH,aAA0BvC,EAAA,EAAgBlZ,KAAA4a,SAAAa,cAAA,GAAAX,EAAAW,cAAA,GAAAhB,GAC1Ce,oBAAA,IAAAxb,KAAA4a,SAAAY,gBAAAxb,KAAA4a,SAAAY,eACAK,cAA2B3C,EAAA,EAAgBlZ,KAAA4a,SAAAiB,eAAA,GAAAf,EAAAe,eAAA,MAI3ClB,EAAAza,UAAAwb,0BAAA,SAAAnX,GACA,GAAAA,EAAAH,QACA,OAAAG,EAAAH,SAEA,GAAAG,EAAAT,UACA,IAEA,IAAArB,EAAA8B,EAAAT,UAAAoO,OAAA,GAAAC,EAAA1P,EAAA0P,KAAA5Q,EAAAkB,EAAAlB,MACA,UAAAA,EAAA4Q,EAAA,KAAA5Q,GAEA,MAAAua,GAEA,OADgBtE,EAAA,EAAMhW,MAAA,oCAA6C/B,OAAA0b,EAAA,EAAA1b,CAAmB8E,IACtF,GAGA,UAGAoW,EAAAza,UAAAob,mBAAA,SAAA/W,GACA,IACA,GAAAA,EAAAwX,WAAA,CAEA,IAAAC,EAAAzX,EAAAwX,WAAAE,OACA,OAAAD,IAAAtb,OAAA,GAAAwb,SAEA,GAAA3X,EAAAT,UAAA,CAEA,IAAAqY,EAAA5X,EAAAT,UAAAoO,OAAA,GAAA6J,WAAAE,OACA,OAAAE,IAAAzb,OAAA,GAAAwb,SAEA,YAEA,MAAAJ,GAEA,OADYtE,EAAA,EAAMhW,MAAA,gCAAyC/B,OAAA0b,EAAA,EAAA1b,CAAmB8E,IAC9E,OAMAoW,EAAA5U,GAAA,iBACA4U,EAnJkB,YCLdyB,EAAW,SAAAC,GAEf,SAAAC,EAAAlY,GACA,IAAAmY,EAAAvc,KAAAC,YACA6K,EAAAuR,EAAA1b,KAAAX,KAAAoE,IAAApE,KAKA,OAJA8K,EAAA1G,UAEA0G,EAAAtB,KAAA+S,EAAArc,UAAAD,YAAAuJ,KACA/J,OAAAC,eAAAoL,EAAAyR,EAAArc,WACA4K,EAEA,OAVIoO,EAAA,EAAiBoD,EAAAD,GAUrBC,EAXe,CAYdjV,OCXDmV,EAAA,kEAIIC,EAAG,WAEP,SAAAC,EAAAC,GACA,iBAAAA,EACA3c,KAAA4c,YAAAD,GAGA3c,KAAA6c,gBAAAF,GAEA3c,KAAA8c,YA2DA,OAhDAJ,EAAAxc,UAAAsP,SAAA,SAAAuN,QACA,IAAAA,IAAsCA,GAAA,GAEtC,IAAAta,EAAAzC,KAAA8R,EAAArP,EAAAqP,KAAAC,EAAAtP,EAAAsP,KAAAiL,EAAAva,EAAAua,KAAAC,EAAAxa,EAAAwa,KAAAC,EAAAza,EAAAya,UACA,OADAza,EAAAuP,SACA,MADAvP,EAAAkJ,MACAoR,GAAAC,EAAA,IAAAA,EAAA,IACA,IAAAlL,GAAAmL,EAAA,IAAAA,EAAA,SAAAlL,IAAA,IAAAA,GAAAmL,GAGAR,EAAAxc,UAAA0c,YAAA,SAAAlD,GACA,IAAAjL,EAAA+N,EAAAW,KAAAzD,GACA,IAAAjL,EACA,UAAsB2N,EAjCtB,eAmCA,IAAA3Z,EAAiByW,EAAA,EAAczK,EAAAvB,MAAA,MAAA8E,EAAAvP,EAAA,GAAAkJ,EAAAlJ,EAAA,GAAAmC,EAAAnC,EAAA,GAAAua,OAAA,IAAApY,EAAA,GAAAA,EAAAkN,EAAArP,EAAA,GAAAqC,EAAArC,EAAA,GAAAwa,OAAA,IAAAnY,EAAA,GAAAA,EAC/BiN,EAAA,GACAmL,EAF+Bza,EAAA,GAG/BsT,EAAAmH,EAAAnH,MAAA,KACAA,EAAArV,OAAA,IACAqR,EAAAgE,EAAA7I,MAAA,MAAA0I,KAAA,KACAsH,EAAAnH,EAAAtS,OAEAhE,OAAAW,OAAAJ,KAAA,CAA6B8R,OAAAkL,OAAAjL,OAAAmL,YAAAD,OAAAjL,WAAArG,UAG7B+Q,EAAAxc,UAAA2c,gBAAA,SAAAO,GACApd,KAAAgS,SAAAoL,EAAApL,SACAhS,KAAA2L,KAAAyR,EAAAzR,KACA3L,KAAAgd,KAAAI,EAAAJ,MAAA,GACAhd,KAAA8R,KAAAsL,EAAAtL,KACA9R,KAAAid,KAAAG,EAAAH,MAAA,GACAjd,KAAA+R,KAAAqL,EAAArL,MAAA,GACA/R,KAAAkd,UAAAE,EAAAF,WAGAR,EAAAxc,UAAA4c,UAAA,WACA,IAAAhS,EAAA9K,KAMA,GALA,uCAAA+K,QAAA,SAAAsS,GACA,IAAAvS,EAAAuS,GACA,UAA0BjB,EA5D1B,iBA+DA,SAAApc,KAAAgS,UAAA,UAAAhS,KAAAgS,SACA,UAAsBoK,EAhEtB,eAkEA,GAAApc,KAAAid,MAAAtG,OAAAC,MAAA0G,SAAAtd,KAAAid,KAAA,KACA,UAAsBb,EAnEtB,gBAsEAM,EApEO,GCHHa,EAAG,WAEP,SAAAC,EAAAC,GACAzd,KAAAyd,MACAzd,KAAA0d,WAAA,IAA8BjB,EAAGgB,GA4EjC,OAzEAD,EAAAtd,UAAAyd,OAAA,WACA,OAAA3d,KAAA0d,YAGAF,EAAAtd,UAAA0d,iBAAA,WACA,SAAA5d,KAAA6d,cAAA7d,KAAA8d,wBAGAN,EAAAtd,UAAA6d,mCAAA,WACA,IACAC,EAAA,CACAC,WAFAje,KAAA0d,WAEA/R,KACAuS,eArBA,KAyBA,OAAAle,KAAA4d,mBAAA,IAA+Cne,OAAAgW,EAAA,EAAAhW,CAASue,IAGxDR,EAAAtd,UAAA2d,YAAA,WACA,IAAAJ,EAAAzd,KAAA0d,WACA1L,EAAAyL,EAAAzL,SAAAyL,EAAAzL,SAAA,OACAiL,EAAAQ,EAAAR,KAAA,IAAAQ,EAAAR,KAAA,GACA,OAAAjL,EAAA,KAAAyL,EAAA3L,KAAAmL,GAGAO,EAAAtd,UAAA4d,qBAAA,WACA,IAAAL,EAAAzd,KAAA0d,WACA,OAAAD,EAAA1L,KAAA,IAAA0L,EAAA1L,KAAA,YAAA0L,EAAAP,UAAA,WAGAM,EAAAtd,UAAAie,kBAAA,SAAAC,EAAAC,GACA,IAAAZ,EAAAzd,KAAA0d,WACAY,EAAA,4BAOA,OANAA,EAAAhd,KAAA,yBAAA2D,MAAAC,WACAoZ,EAAAhd,KAAA,iBAAA8c,EAAA,IAAAC,GACAC,EAAAhd,KAAA,cAAAmc,EAAA9R,MACA8R,EAAAT,MACAsB,EAAAhd,KAAA,iBAAAmc,EAAAT,MAEA,CACAuB,eAAA,mBACAC,gBAAAF,EAAA1I,KAAA,QAIA4H,EAAAtd,UAAAue,wBAAA,SAAAC,QACA,IAAAA,IAAuCA,EAAA,IACvC,IAAAjB,EAAAzd,KAAA0d,WACAiB,EAAA3e,KAAA6d,eAAAJ,EAAA1L,KAAA,IAAA0L,EAAA1L,KAAA,6BACA6M,EAAA,GAEA,QAAA7S,KADA6S,EAAAtd,KAAA,OAAAmc,EAAAjO,YACAkP,EACA,YAAA3S,EAAA,CACA,IAAA2S,EAAA/S,KACA,SAEA+S,EAAA/S,KAAAnC,MACAoV,EAAAtd,KAAA,QAAAqU,mBAAA+I,EAAA/S,KAAAnC,OAEAkV,EAAA/S,KAAAkT,OACAD,EAAAtd,KAAA,SAAAqU,mBAAA+I,EAAA/S,KAAAkT,aAIAD,EAAAtd,KAAAqU,mBAAA5J,GAAA,IAAA4J,mBAAA+I,EAAA3S,KAGA,OAAA6S,EAAAle,OACAie,EAAA,IAAAC,EAAAhJ,KAAA,KAEA+I,GAEAnB,EAhFO,YCDAsB,EAAA,GAiDA,SAAAC,EAAAhE,GACP,IAAAiE,EAAA,GAKA,OArDO,SAAAjE,GACP,IAAAkE,EAAAlE,EAAAkE,qBAA8D/F,EAAA,EAAgB6B,EAAAkE,sBAAA,GAC9EC,EAAAnE,EAAAiE,aACAA,EAAA,GACA,GAAApf,MAAAyN,QAAA6R,GAAA,CACA,IAAAC,EAAAD,EAAAxJ,IAAA,SAAAnV,GAAyE,OAAAA,EAAAiJ,OACzE4V,EAAA,GAEAH,EAAAlU,QAAA,SAAAsU,IACA,IAAAF,EAAAG,QAAAD,EAAA7V,QACA,IAAA4V,EAAAE,QAAAD,EAAA7V,QACAwV,EAAA1d,KAAA+d,GACAD,EAAA9d,KAAA+d,EAAA7V,SAIA0V,EAAAnU,QAAA,SAAAwU,IACA,IAAAH,EAAAE,QAAAC,EAAA/V,QACAwV,EAAA1d,KAAAie,GACAH,EAAA9d,KAAAie,EAAA/V,aAIA,uBAAA0V,EAKA,OAAehG,EAAA,EAAgB+F,GAJ/BD,EAAAE,EAAAD,GACAD,EAAApf,MAAAyN,QAAA2R,KAAA,CAAAA,GAKA,OAAAA,EAmBAQ,CAAAzE,GAAAhQ,QAAA,SAAAnF,GACAoZ,EAAApZ,EAAA4D,MAAA5D,EAjBO,SAAAA,IACP,IAAAkZ,EAAAQ,QAAA1Z,EAAA4D,QAGA5D,EAAA2T,UAA0BsB,EAAA,EAAyB5B,EAAA,GACnD6F,EAAAxd,KAAAsE,EAAA4D,MACIgO,EAAA,EAAMO,IAAA,0BAAAnS,EAAA4D,OAYViW,CAAA7Z,KAEAoZ,ECtBA,IAAIU,EAAU,WAOd,SAAAC,EAAAC,EAAA7E,GAEA/a,KAAA6f,aAAA,EACA7f,KAAA8f,SAAA,IAAAF,EAAA7E,GACA/a,KAAA4a,SAAAG,EACAA,EAAA0C,MACAzd,KAAA+f,KAAA,IAA4BtD,EAAG1B,EAAA0C,MAE/Bzd,KAAAggB,cAA6BjB,EAAiB/e,KAAA4a,UA2S9C,OAtSA+E,EAAAzf,UAAA2D,iBAAA,SAAAC,EAAAC,EAAA3B,GACA,IAAA0I,EAAA9K,KACAgE,EAAAD,KAAAG,SAcA,OAbAlE,KAAA6f,aAAA,EACA7f,KAAAigB,cACAC,mBAAApc,EAAAC,GACAwH,KAAA,SAAAhH,GAAoC,OAAAuG,EAAAqV,cAAA5b,EAAAR,EAAA3B,KACpCmJ,KAAA,SAAA6U,GAEApc,EAAAoc,KAAAlc,SACA4G,EAAA+U,aAAA,IAEApU,MAAA,SAAAwI,GACYuD,EAAA,EAAMhW,MAAAyS,GAClBnJ,EAAA+U,aAAA,IAEA7b,GAKA2b,EAAAzf,UAAAiE,eAAA,SAAAC,EAAAC,EAAAN,EAAA3B,GACA,IAAA0I,EAAA9K,KACAgE,EAAAD,KAAAG,SAgBA,OAfAlE,KAAA6f,aAAA,GAC4BpgB,OAAA6a,EAAA,EAAA7a,CAAW2E,GACvCpE,KAAAigB,cAAAI,iBAAA,GAAAjc,EAAAC,EAAAN,GACA/D,KAAAigB,cAAAC,mBAAA9b,EAAAL,IAEAwH,KAAA,SAAAhH,GAAoC,OAAAuG,EAAAqV,cAAA5b,EAAAR,EAAA3B,KACpCmJ,KAAA,SAAA6U,GAEApc,EAAAoc,KAAAlc,SACA4G,EAAA+U,aAAA,IAEApU,MAAA,SAAAwI,GACYuD,EAAA,EAAMhW,MAAAyS,GAClBnJ,EAAA+U,aAAA,IAEA7b,GAKA2b,EAAAzf,UAAAoE,aAAA,SAAAC,EAAAR,EAAA3B,GACA,IAAA0I,EAAA9K,KACAgE,EAAAD,KAAAG,SAYA,OAXAlE,KAAA6f,aAAA,EACA7f,KAAAmgB,cAAA5b,EAAAR,EAAA3B,GACAmJ,KAAA,SAAA6U,GAEApc,EAAAoc,KAAAlc,SACA4G,EAAA+U,aAAA,IAEApU,MAAA,SAAAwI,GACYuD,EAAA,EAAMhW,MAAAyS,GAClBnJ,EAAA+U,aAAA,IAEA7b,GAKA2b,EAAAzf,UAAAyd,OAAA,WACA,OAAA3d,KAAA+f,MAKAJ,EAAAzf,UAAAyE,WAAA,WACA,OAAA3E,KAAA4a,UAKA+E,EAAAzf,UAAAogB,MAAA,SAAArY,GACA,IAAA6C,EAAA9K,KACA,OAAAA,KAAAugB,oBAAAtY,GAAAsD,KAAA,SAAAiV,GAIA,OAHA1V,EAAA2V,qBACAC,cAAA5V,EAAA2V,qBAEA3V,EAAAmV,cACAU,eACAC,MAAA3Y,GACAsD,KAAA,SAAAsV,GAAmD,OAAAL,GAAAK,OAMnDlB,EAAAzf,UAAA0gB,MAAA,SAAA3Y,GACA,IAAA6C,EAAA9K,KACA,OAAAA,KAAAsgB,MAAArY,GAAAsD,KAAA,SAAAD,GAEA,OADAR,EAAAnG,aAAAmc,SAAA,EACAxV,KAMAqU,EAAAzf,UAAA6gB,gBAAA,WACA,OAAA/gB,KAAAggB,eAAA,IAKAL,EAAAzf,UAAAyF,eAAA,SAAAC,GACA,IACA,OAAA5F,KAAAggB,cAAApa,EAAAG,KAAA,KAEA,MAAAF,GAEA,OADY2R,EAAA,EAAM1R,KAAA,+BAAAF,EAAAG,GAAA,4BAClB,OAIA4Z,EAAAzf,UAAAqgB,oBAAA,SAAAtY,GACA,IAAA6C,EAAA9K,KACA,WAAAghB,QAAA,SAAA7V,GACA,IAAA8V,EAAA,EAEAnW,EAAA2V,qBACAC,cAAA5V,EAAA2V,qBAEA3V,EAAA2V,oBAAAS,YAAA,WACApW,EAAA+U,aAIAoB,GATA,EAUAhZ,GAAAgZ,GAAAhZ,GACAkD,GAAA,IALAA,GAAA,IANA,MAkBAwU,EAAAzf,UAAA+f,YAAA,WACA,OAAAjgB,KAAA8f,UAGAH,EAAAzf,UAAAihB,WAAA,WACA,WAAAnhB,KAAA2E,aAAAmc,cAAAzd,IAAArD,KAAA+f,MAgBAJ,EAAAzf,UAAAkhB,cAAA,SAAA7c,EAAAnC,EAAA2B,GACA,IAAAtB,EAAAzC,KAAA2E,aAAA0c,EAAA5e,EAAA4e,YAAAC,EAAA7e,EAAA6e,QAAAC,EAAA9e,EAAA8e,KAAA3c,EAAAnC,EAAA+e,sBAAA,IAAA5c,EAAA,IAAAA,EACA6c,EAAuBvI,EAAA,EAAgB,GAAG3U,QAC1ClB,IAAAoe,EAAAJ,kBAAAhe,IAAAge,IACAI,EAAAJ,oBAEAhe,IAAAoe,EAAAH,cAAAje,IAAAie,IACAG,EAAAH,gBAEAje,IAAAoe,EAAAF,WAAAle,IAAAke,IACAE,EAAAF,QAEAE,EAAArd,UACAqd,EAAArd,QAA+BqV,EAAQgI,EAAArd,QAAAod,IAEvC,IAAA1d,EAAA2d,EAAA3d,WAAA2d,EAAA3d,UAAAoO,QAAAuP,EAAA3d,UAAAoO,OAAA,GACApO,KAAAvC,QACAuC,EAAAvC,MAA8BkY,EAAQ3V,EAAAvC,MAAAigB,IAEtC,IAAAnR,EAAAoR,EAAApR,QACAA,KAAAsB,MACAtB,EAAAsB,IAA0B8H,EAAQpJ,EAAAsB,IAAA6P,SAElCne,IAAAoe,EAAAvd,WACAud,EAAAvd,SAAgCzE,OAAA0b,EAAA,EAAA1b,IAEhCO,KAAA0hB,iBAAAD,EAAAE,KAEA,IAAArW,EAAqBsW,EAAA,EAAWzW,QAAAsW,GAOhC,OAJArf,IAEAkJ,EAAAlJ,EAAAkL,aAAAmU,EAAA1d,IAEAuH,GAMAqU,EAAAzf,UAAAwhB,iBAAA,SAAAG,GACA,IAAAC,EAAAriB,OAAA8N,KAAAvN,KAAAggB,eACA6B,GAAAC,EAAAphB,OAAA,IACAmhB,EAAA7C,aAAA8C,IAgBAnC,EAAAzf,UAAAigB,cAAA,SAAA5b,EAAAR,EAAA3B,GACA,IAAA0I,EAAA9K,KACAyC,EAAAzC,KAAA2E,aAAAod,EAAAtf,EAAAsf,WAAAC,EAAAvf,EAAAuf,WACA,OAAAhiB,KAAAmhB,aAKA,iBAAAa,GAAA3c,KAAAqM,SAAAsQ,EACmBJ,EAAA,EAAWxW,OAAA,qDAE9B,IAAmBwW,EAAA,EAAW,SAAAzW,EAAAC,GAC9BN,EAAAsW,cAAA7c,EAAAnC,EAAA2B,GAAAwH,KAAA,SAAAkW,GACA,UAAAA,EAAA,CAIA,IAAArB,EAAAqB,EACA,IAEA,GADA1d,KAAAke,OAAA,IAAAle,EAAAke,KAAA1P,aACAwP,EAGA,OAFAjX,EAAAmV,cAAAiC,UAAA9B,QACAjV,EAAAiV,GAGA,IAAA+B,EAAAJ,EAAAN,EAAA1d,GACA,YAAAoe,EACwB3K,EAAA,EAAMhW,MAAA,mEAE9B,GAA6B/B,OAAA6a,EAAA,EAAA7a,CAAU0iB,GACvCrX,EAAAsX,uBAAAD,EAAAhX,EAAAC,OAEA,CAEA,WADAgV,EAAA+B,GAIA,OAF4B3K,EAAA,EAAMO,IAAA,2DAClC5M,EAAA,MAIAL,EAAAmV,cAAAiC,UAAA9B,GACAjV,EAAAiV,IAGA,MAAAtc,GACAgH,EAAAjH,iBAAAC,EAAA,CACAme,KAAA,CACA1P,YAAA,GAEA6G,kBAAAtV,IAEAsH,EAAA,2DArCAA,EAAA,8DAVmBwW,EAAA,EAAWxW,OAAA,0CAuD9BuU,EAAAzf,UAAAkiB,uBAAA,SAAAL,EAAA5W,EAAAC,GACA,IAAAN,EAAA9K,KACA+hB,EACAxW,KAAA,SAAA8W,GACA,OAAAA,GAKAvX,EAAAmV,cAAAiC,UAAAG,GACAlX,EAAAkX,IALAjX,EAAA,wDAOAK,MAAA,SAAAvK,GACAkK,EAAA,4BAAAlK,MAGAye,EA1Tc,GClCV2C,EAAa,WACjB,SAAAC,KAiBA,OAZAA,EAAAriB,UAAAgiB,UAAA,SAAApN,GACA,OAAAkM,QAAA7V,QAAA,CACA8I,OAAA,sEACAuO,OAAoBvK,EAAMwK,WAM1BF,EAAAriB,UAAA0gB,MAAA,SAAA9L,GACA,OAAAkM,QAAA7V,SAAA,IAEAoX,EAlBiB,GCIbG,EAAW,WAEf,SAAAC,EAAA5H,GACA/a,KAAA4a,SAAAG,EACA/a,KAAA4a,SAAA6C,KACYjG,EAAA,EAAM1R,KAAA,kDAElB9F,KAAA4iB,WAAA5iB,KAAA6iB,kBAkCA,OA7BAF,EAAAziB,UAAA2iB,gBAAA,WACA,WAAmBP,GAKnBK,EAAAziB,UAAAggB,mBAAA,SAAA4C,EAAAC,GACA,UAAkB3G,EAAW,yDAK7BuG,EAAAziB,UAAAmgB,iBAAA,SAAA2C,EAAAzW,EAAAwW,GACA,UAAkB3G,EAAW,uDAK7BuG,EAAAziB,UAAAgiB,UAAA,SAAA3d,GACAvE,KAAA4iB,WAAAV,UAAA3d,GAAAkH,MAAA,SAAAwI,GACYuD,EAAA,EAAMhW,MAAA,8BAAAyS,MAMlB0O,EAAAziB,UAAAygB,aAAA,WACA,OAAA3gB,KAAA4iB,YAEAD,EAzCe,GCqDR,SAAAM,IACP,eAAqBxjB,OAAA0b,EAAA,EAAA1b,IACrB,SAEA,IAOA,OALA,IAAAyjB,QAEA,IAAAC,QAAA,IAEA,IAAAC,UACA,EAEA,MAAAliB,GACA,UAgCO,SAAAmiB,IAKP,IAAAJ,IACA,SAEA,IAKA,OAHA,IAAAE,QAAA,KACAG,eAAA,YAEA,EAEA,MAAApiB,GACA,UCzGA,IAAIqiB,EAAS9jB,OAAA0b,EAAA,EAAA1b,GACb+jB,EAAA,CACAC,SAAA,EACAC,sBAAA,EACAC,oBAAA,EACAC,iBAAA,GAKAC,EAAA,IAEAC,EAAA,0GASA,SAAAC,EAAAtO,EAAA1J,GACA,OAAAtM,OAAAS,UAAAJ,eAAAa,KAAA8U,EAAA1J,GAOA,SAAAiY,IACA,0BAAAxN,UAAA,MAAAA,SAAAyN,SACA,GACAzN,SAAAyN,SAAAC,KA6CAV,EAAAC,QAAA,WACA,IAwCAU,EAAAC,EAxCAC,EAAA,GAAAC,EAAA,KAAAC,EAAA,KAqBA,SAAAC,EAAAthB,EAAAuhB,EAAAjjB,GACA,IAAAsC,EAAA,KACA,IAAA2gB,GAAAjB,EAAAE,qBAAA,CAGA,QAAAnjB,KAAA8jB,EACA,GAAAN,EAAAM,EAAA9jB,GACA,IACA8jB,EAAA9jB,GAAA2C,EAAAuhB,EAAAjjB,GAEA,MAAAkjB,GACA5gB,EAAA4gB,EAIA,GAAA5gB,EACA,MAAAA,GAcA,SAAA6gB,EAAAvgB,EAAAuN,EAAAiT,EAAAC,EAAAC,GACA,IAAA5hB,EAAA,KAKA,GAHA4hB,EAAmBrlB,OAAA6a,EAAA,EAAA7a,CAAYqlB,KAAAtjB,MAAAsjB,EAE/B1gB,EAAkB3E,OAAA6a,EAAA,EAAA7a,CAAY2E,eAC9BmgB,EACAf,EAAAG,mBAAAoB,qCAAAR,EAAA5S,EAAAiT,EAAAxgB,GACA4gB,SAEA,GAAAF,GAA6BrlB,OAAA6a,EAAA,EAAA7a,CAAOqlB,IACpC5hB,EAAAsgB,EAAAG,mBAAAmB,IACApS,UAAA,UACA8R,EAAAthB,GAAA,EAAA4hB,OAEA,CACA,IAKAtb,EALAya,EAAA,CACAtS,MACAsT,KAAAL,EACAM,OAAAL,GAGAM,EAAA/gB,EACA,GAAkB,oBAAlB,GAAkBoL,SAAA7O,KAAAyD,GAAA,CAClB,IAAAghB,EAAAhhB,EAAAqK,MAAAqV,GACAsB,IACA5b,EAAA4b,EAAA,GACAD,EAAAC,EAAA,IAGAnB,EAAAoB,KAAAxB,EACAI,EAAArX,QAAA,KAcA4X,EAbAthB,EAAA,CACAsG,OACApF,QAAA+gB,EACAG,KAAA,UACA5S,UAAA,UACAxP,MAAA,CACoBgW,EAAA,EAAgB,GAAG+K,EAAA,CAIvCtS,IAAAsS,EAAAtS,KAAAqS,SAGA,QAEA,QAAAG,GAEAA,EAAAvjB,MAAAZ,KAAAS,WAWA,SAAA8kB,EAAArkB,GACA,IAAAgW,EAAAhW,MAAAskB,OAAAtkB,EAAAskB,OAAAvR,OAAA/S,EAAA+S,SAAA/S,EACAgC,EAAAsgB,EAAAG,mBAAAzM,GACAhU,EAAAwP,UAAA,uBACAxP,EAAAkB,UACAlB,EAAAkB,QAAA6R,KAAAC,UAA2CzW,OAAAgW,EAAA,EAAAhW,CAASyX,KAEpDsN,EAAAthB,GAAA,EAAAgU,GAyBA,SAAA8N,IACA,IAAAS,EAAAlB,EAAAmB,EAAApB,EACAC,EAAA,KACAD,EAAA,KACAE,EAAAiB,GAAA,EAAAC,GAQA,SAAAjC,EAAAkC,GACA,GAAApB,EAAA,CACA,GAAAD,IAAAqB,EACA,OAGAX,IAGA,IAAA9hB,EAAAsgB,EAAAG,mBAAAgC,GAYA,MAXApB,EAAArhB,EACAohB,EAAAqB,EAKAle,WAAA,WACA6c,IAAAqB,GACAX,KAES9hB,EAAA0iB,WAAA,OACTD,EAKA,OAHAlC,EAAAoC,WA5KA,SAAAnR,GAKA2P,EAAA/iB,KAAAoT,IAwKA+O,EAAAqC,sBAvDA,YACA,IAAA1B,IAGAD,EAA6BZ,EAAMwC,QAC3BxC,EAAMwC,QAAApB,EACdP,GAAA,IAkDAX,EAAAuC,wCA5CA,WACQzC,EAAM0C,qBAAAV,GA4Cd9B,EAtLA,GA2PAD,EAAAG,mBAAA,WA4CA,SAAAuC,EAAAP,GACA,IAAAA,MAAAziB,MACA,YAUA,IAPA,IAMAijB,EAAAC,EAAAC,EANAC,EAAA,0IAIAC,EAAA,0KAAAC,EAAA,gHAEAC,EAAA,gDAAAC,EAAA,gCAAAC,EAAAhB,EAAAziB,MAAA6S,MAAA,MAAA7S,EAAA,GAAA0jB,EAAA,sBAAAzJ,KAAAwI,EAAAvhB,SACA7D,EAAA,EAAAsmB,EAAAF,EAAAjmB,OAAyCH,EAAAsmB,IAAOtmB,EAAA,CAChD,GAAA6lB,EAAAE,EAAAnJ,KAAAwJ,EAAApmB,IAAA,CACA,IAAAumB,EAAAV,EAAA,QAAAA,EAAA,GAAA9G,QAAA,UACA8G,EAAA,QAAAA,EAAA,GAAA9G,QAAA,UACA6G,EAAAO,EAAAvJ,KAAAiJ,EAAA,OAEAA,EAAA,GAAAD,EAAA,GACAC,EAAA,GAAAD,EAAA,GACAC,EAAA,GAAAD,EAAA,IAEAE,EAAA,CACA1U,IAAAyU,EAAA,GACAf,KAAAe,EAAA,IAAAvC,EACAnhB,KAAAokB,EAAA,CAAAV,EAAA,OACAnB,KAAAmB,EAAA,IAAAA,EAAA,QACAlB,OAAAkB,EAAA,IAAAA,EAAA,cAGA,GAAAA,EAAAI,EAAArJ,KAAAwJ,EAAApmB,IACA8lB,EAAA,CACA1U,IAAAyU,EAAA,GACAf,KAAAe,EAAA,IAAAvC,EACAnhB,KAAA,GACAuiB,MAAAmB,EAAA,GACAlB,OAAAkB,EAAA,IAAAA,EAAA,aAGA,MAAAA,EAAAG,EAAApJ,KAAAwJ,EAAApmB,KAyBA,SAxBA6lB,EAAA,IAAAA,EAAA,GAAA9G,QAAA,gBACA6G,EAAAM,EAAAtJ,KAAAiJ,EAAA,MAEAA,EAAA,GAAAA,EAAA,WACAA,EAAA,GAAAD,EAAA,GACAC,EAAA,GAAAD,EAAA,GACAC,EAAA,OAEA,IAAA7lB,GAAA6lB,EAAA,aAAAT,EAAAoB,eAKA7jB,EAAA,GAAAgiB,OAAAS,EAAAoB,aAAA,GAEAV,EAAA,CACA1U,IAAAyU,EAAA,GACAf,KAAAe,EAAA,IAAAvC,EACAnhB,KAAA0jB,EAAA,GAAAA,EAAA,GAAArQ,MAAA,QACAkP,KAAAmB,EAAA,IAAAA,EAAA,QACAlB,OAAAkB,EAAA,IAAAA,EAAA,UAMAC,EAAAhB,MAAAgB,EAAApB,OACAoB,EAAAhB,KAAAxB,GAEAwC,EAAAzZ,QAAA,KACA1J,EAAA5B,KAAA+kB,GAEA,OAAAnjB,EAAAxC,QAGAwC,EAAA,IAAAA,EAAA,GAAA+hB,OAAA/hB,EAAA,GAAAgiB,QAAA0B,IACA1jB,EAAA,GAAAgiB,OAAA,MAEA,CACAI,KAAA,QACA9b,KAAAmc,EAAAnc,KACApF,QAAAuhB,EAAAvhB,QACAlB,UATA,KAyKA,SAAA6hB,EAAAiC,EAAArV,EAAAiT,EAAAxgB,GACA,IAAA6iB,EAAA,CACAtV,MACAsT,KAAAL,GAEA,GAAAqC,EAAAtV,KAAAsV,EAAAhC,KAAA,CAYA,GAXA+B,EAAApB,YAAA,EACAqB,EAAA5B,OACA4B,EAAA5B,KAAAxB,GAEAoD,EAAAra,UACAqa,EAAAra,QAAA,MAEA,cAAAuQ,KAAA/Y,KAEA6iB,EAAA/B,OAAA,MAEA8B,EAAA9jB,MAAAxC,OAAA,GACAsmB,EAAA9jB,MAAA,GAAAyO,MAAAsV,EAAAtV,IAAA,CACA,GAAAqV,EAAA9jB,MAAA,GAAA+hB,OAAAgC,EAAAhC,KACA,SAEA,IAAA+B,EAAA9jB,MAAA,GAAA+hB,MAAA+B,EAAA9jB,MAAA,GAAAmiB,OAAA4B,EAAA5B,KAGA,OAFA2B,EAAA9jB,MAAA,GAAA+hB,KAAAgC,EAAAhC,KACA+B,EAAA9jB,MAAA,GAAA0J,QAAAqa,EAAAra,SACA,EAMA,OAFAoa,EAAA9jB,MAAAgkB,QAAAD,GACAD,EAAAG,SAAA,GACA,EAKA,OAFAH,EAAApB,YAAA,GAEA,EAYA,SAAAwB,EAAAzB,EAAAxP,GAEA,IADA,IAAuHiQ,EAAAiB,EAAvHC,EAAA,qEAAApkB,EAAA,GAAAqkB,EAAA,GAAuHC,GAAA,EACvHC,EAAAL,EAAAM,OAAsED,IAAAD,EAAoBC,IAAAC,OAC1F,GAAAD,IAAA9D,GAAA8D,IAAAjE,EAAAC,QAAA,CAgBA,GAbA4D,EAAA,CACA1V,IAAA,KACA0T,KAAAxB,EACAnhB,KAAA,GACAuiB,KAAA,KACAC,OAAA,MAEAuC,EAAAje,KACA6d,EAAAhC,KAAAoC,EAAAje,MAEA4c,EAAAkB,EAAAnK,KAAAsK,EAAAjY,eACA6X,EAAAhC,KAAAe,EAAA,SAEA,IAAAiB,EAAAhC,KACA,IACAgC,EAAAhC,KAAAe,EAAA9O,MAAAjJ,UAAA,EAAA+X,EAAA9O,MAAAgI,QAAA,MAEA,MAAApe,IAEAqmB,EAAA,GAAAE,GACAD,GAAA,EAGAD,EAAA,GAAAE,IAAA,EAEAvkB,EAAA5B,KAAA+lB,GAEAlR,GACAjT,EAAAoQ,OAAA,EAAA6C,GAEA,IAAA7K,EAAA,CACAga,KAAA,UACA9b,KAAAmc,EAAAnc,KACApF,QAAAuhB,EAAAvhB,QACAlB,SAGA,OADA6hB,EAAAzZ,EAAAqa,EAAAgC,WAAAhC,EAAAiC,SAAAjC,EAAAV,MAAAU,EAAAkC,WAAAlC,EAAAvhB,SAAAuhB,EAAAmC,aACAxc,EAQA,SAAAyc,EAAApC,EAAAxP,GACA,IAAAjT,EAAA,KACAiT,EAAA,MAAAA,EAAA,GAAAA,EACA,IAKA,GADAjT,EAhQA,SAAAyiB,GAIA,IAAA5J,EAAA4J,EAAA5J,WACA,GAAAA,EAAA,CAIA,IADA,IAAAqK,EAAA4B,EAAA,8DAAAC,EAAA,uGAAAtB,EAAA5K,EAAAhG,MAAA,MAAA7S,EAAA,GACA+hB,EAAA,EAA0BA,EAAA0B,EAAAjmB,OAAqBukB,GAAA,GAC/C,IAAAoB,EAAA,MACAD,EAAA4B,EAAA7K,KAAAwJ,EAAA1B,KACAoB,EAAA,CACA1U,IAAAyU,EAAA,GACAnB,MAAAmB,EAAA,GACAlB,OAAA,KACAG,KAAAe,EAAA,GACA1jB,KAAA,KAGA0jB,EAAA6B,EAAA9K,KAAAwJ,EAAA1B,OACAoB,EAAA,CACA1U,IAAAyU,EAAA,GACAnB,MAAAmB,EAAA,GACAlB,QAAAkB,EAAA,GACAf,KAAAe,EAAA,IAAAA,EAAA,GACA1jB,KAAA0jB,EAAA,GAAAA,EAAA,GAAArQ,MAAA,UAGAsQ,KACAA,EAAAhB,MAAAgB,EAAApB,OACAoB,EAAAhB,KAAAxB,GAEAwC,EAAApB,OACAoB,EAAAzZ,QAAA,MAEAyZ,EAAAzZ,UACAyZ,EAAAzZ,QAAA,CAAA+Z,EAAA1B,EAAA,KAEA/hB,EAAA5B,KAAA+kB,IAGA,OAAAnjB,EAAAxC,OAGA,CACA4kB,KAAA,aACA9b,KAAAmc,EAAAnc,KACApF,QAAAuhB,EAAAvhB,QACAlB,SANA,MAqNAglB,CAAAvC,GAEA,OAAAziB,EAGA,MAAAhC,IACA,IAEA,GADAgC,EAAAgjB,EAAAP,GAEA,OAAAziB,EAGA,MAAAhC,IACA,IAEA,GADAgC,EAhNA,SAAAyiB,GAeA,IAAAgB,EAAAhB,EAAAvhB,QAAA2R,MAAA,MACA,GAAA4Q,EAAAjmB,OAAA,EACA,YAEA,IAA0U0lB,EAA1U+B,EAAA,yFAAAC,EAAA,kGAAAC,EAAA,yCAAAnlB,EAAA,GAAAolB,EAAuS/E,GAAUA,EAAM/M,UAAa+M,EAAM/M,SAAA+R,qBAAA,UAAAC,EAAA,GAC1U,QAAAloB,KAAAgoB,EACAvE,EAAAuE,EAAAhoB,KAAAgoB,EAAAhoB,GAAAmoB,KACAD,EAAAlnB,KAAAgnB,EAAAhoB,IAGA,QAAA2kB,EAAA,EAA0BA,EAAA0B,EAAAjmB,OAAqBukB,GAAA,GAC/C,IAAAoC,EAAA,MACAjB,EAAA+B,EAAAhL,KAAAwJ,EAAA1B,KACAoC,EAAA,CACA1V,IAAAyU,EAAA,GACAf,KAAAe,EAAA,GACA1jB,KAAA,GACAuiB,MAAAmB,EAAA,GACAlB,OAAA,OAGAkB,EAAAgC,EAAAjL,KAAAwJ,EAAA1B,KACAoC,EAAA,CACA1V,IAAAyU,EAAA,GACAf,KAAAe,EAAA,GACA1jB,KAAA,GACAuiB,MAAAmB,EAAA,GACAlB,OAAA,OAGAkB,EAAAiC,EAAAlL,KAAAwJ,EAAA1B,OAEAoC,EAAA,CACA1V,IAFAqS,IAAAxS,QAAA,WAGA6T,KAAA,GACA3iB,KAAA,GACAuiB,KAAAmB,EAAA,GACAlB,OAAA,OAGAmC,IACAA,EAAAhC,OACAgC,EAAAhC,KAAAxB,GAGAwD,EAAAza,QAAA,CAAA+Z,EAAA1B,EAAA,IACA/hB,EAAA5B,KAAA+lB,IAGA,OAAAnkB,EAAAxC,OAGA,CACA4kB,KAAA,YACA9b,KAAAmc,EAAAnc,KACApF,QAAAuiB,EAAA,GACAzjB,SANA,KA+IAwlB,CAAA/C,GAEA,OAAAziB,EAGA,MAAAhC,IACA,IAEA,GADAgC,EAAAkkB,EAAAzB,EAAAxP,EAAA,GAEA,OAAAjT,EAGA,MAAAhC,IACA,OACAoU,SAAAqQ,EACAnc,KAAAmc,EAAAnc,KACApF,QAAAuhB,EAAAvhB,QACAkhB,KAAA,UAKA,OAFAyC,EAAAhD,uCACAgD,EAAA7B,kCACA6B,EA5aA,GA8aAvE,EAAAE,sBAAA,EACAF,EAAAI,gBAAA,GACA,IAAI+E,EAAUnF,EAAAC,QAAAoC,WACV+C,EAAqBpF,EAAAC,QAAAqC,sBACrB+C,EAAuCrF,EAAAC,QAAAuC,wCAC3CrC,EAAAH,EAAAG,mBCzwBAmF,EAAA,GAMO,SAAAC,EAAAhN,GACP,IAAAE,EAAA+M,GAAAjN,EAAA7Y,OACAY,EAAA,CACAqO,KAAA4J,EAAAvS,KACAjI,MAAAwa,EAAA3X,SASA,OAPA6X,KAAAvb,SACAoD,EAAAiY,WAAA,CAAgCE,gBAGhC5Y,IAAAS,EAAAqO,MAAA,KAAArO,EAAAvC,QACAuC,EAAAvC,MAAA,8BAEAuC,EAyBO,SAAAmlB,GAAAlN,GAEP,OACAjY,UAAA,CACAoO,OAAA,CAHA6W,EAAAhN,MAUO,SAAAiN,GAAA9lB,GACP,IAAAA,MAAAxC,OACA,SAEA,IAAAwoB,EAAAhmB,EACAimB,EAAAD,EAAA,GAAA7D,MAAA,GACA+D,EAAAF,IAAAxoB,OAAA,GAAA2kB,MAAA,GAUA,OARA8D,EAAA3O,SAAA,mBAAA2O,EAAA3O,SAAA,uBACA0O,IAAAhc,MAAA,IAGAkc,EAAA5O,SAAA,mBACA0O,IAAAhc,MAAA,OAGAgc,EACAxT,IAAA,SAAA2T,GAA+B,OAC/BC,MAAAD,EAAAnE,OACAhJ,SAAAmN,EAAA1X,KAAAuX,EAAA,GAAAvX,IACA4X,SAAAF,EAAAhE,MAAA,IACAmE,QAAA,EACAC,OAAAJ,EAAApE,QAEA/X,MAAA,EAAA4b,GACAY,UChFA,IAAIC,GAAa,WACjB,SAAAC,EAAAC,GACA7pB,KAAA6pB,SAEA7pB,KAAA8pB,QAAA,GAwEA,OAnEAF,EAAA1pB,UAAA6pB,QAAA,WACA,YAAA1mB,IAAArD,KAAA6pB,QAAA7pB,KAAAU,SAAAV,KAAA6pB,QAQAD,EAAA1pB,UAAAiT,IAAA,SAAA6W,GACA,IAAAlf,EAAA9K,KACA,OAAAA,KAAA+pB,YAGA,IAAA/pB,KAAA8pB,QAAAxK,QAAA0K,IACAhqB,KAAA8pB,QAAAxoB,KAAA0oB,GAEAA,EACAze,KAAA,WAA+B,OAAAT,EAAAmf,OAAAD,KAC/Bve,MAAA,WACA,OAAAX,EAAAmf,OAAAD,GAAAve,MAAA,gBAKAue,GAbAhJ,QAAA5V,OAAA,IAAsCgR,EAAW,qDAqBjDwN,EAAA1pB,UAAA+pB,OAAA,SAAAD,GAEA,OADAhqB,KAAA8pB,QAAAxW,OAAAtT,KAAA8pB,QAAAxK,QAAA0K,GAAA,OAMAJ,EAAA1pB,UAAAQ,OAAA,WACA,OAAAV,KAAA8pB,QAAAppB,QAQAkpB,EAAA1pB,UAAAgqB,MAAA,SAAAjiB,GACA,IAAA6C,EAAA9K,KACA,WAAAghB,QAAA,SAAA7V,GACA,IAAAgf,EAAA1iB,WAAA,WACAQ,KAAA,GACAkD,GAAA,IAEalD,GACb+Y,QAAAoJ,IAAAtf,EAAAgf,SACAve,KAAA,WACA7D,aAAAyiB,GACAhf,GAAA,KAEAM,MAAA,WACAN,GAAA,QAIAye,EA5EiB,GCCbS,GAAa,WACjB,SAAAC,EAAAvP,GACA/a,KAAA+a,UAEA/a,KAAA8pB,QAAA,IAA2BH,GAAa,IACxC3pB,KAAA2R,IAAA,IAAuB4L,EAAGvd,KAAA+a,QAAA0C,KAAAM,qCAc1B,OATAuM,EAAApqB,UAAAgiB,UAAA,SAAApN,GACA,UAAkBsH,EAAW,wDAK7BkO,EAAApqB,UAAA0gB,MAAA,SAAA3Y,GACA,OAAAjI,KAAA8pB,QAAAI,MAAAjiB,IAEAqiB,EAnBiB,GCCbC,GAAS9qB,OAAA0b,EAAA,EAAA1b,GAET+qB,GAAc,SAAAnO,GAElB,SAAAoO,IACA,cAAApO,KAAAzb,MAAAZ,KAAAS,YAAAT,KAmBA,OArBIkZ,EAAA,EAAiBuR,EAAApO,GAOrBoO,EAAAvqB,UAAAgiB,UAAA,SAAA3d,GACA,IAAAmmB,EAAA,CACAC,KAAA1U,KAAAC,UAAA3R,GACA/B,OAAA,OAKA8gB,eAA6BD,IAAsB,aAEnD,OAAArjB,KAAA8pB,QAAA3W,IAAgCoX,GAAMK,MAAA5qB,KAAA2R,IAAA+Y,GAAAnf,KAAA,SAAAsf,GAA2D,OACjGrI,OAAoBvK,EAAMQ,aAAAoS,EAAArI,aAG1BiI,EAtBkB,CAuBhBJ,ICzBES,GAAY,SAAAzO,GAEhB,SAAA0O,IACA,cAAA1O,KAAAzb,MAAAZ,KAAAS,YAAAT,KAwBA,OA1BIkZ,EAAA,EAAiB6R,EAAA1O,GAOrB0O,EAAA7qB,UAAAgiB,UAAA,SAAA3d,GACA,IAAAuG,EAAA9K,KACA,OAAAA,KAAA8pB,QAAA3W,IAAA,IAAA6N,QAAA,SAAA7V,EAAAC,GACA,IAAAiF,EAAA,IAAA2a,eACA3a,EAAA4a,mBAAA,WACA,IAAA5a,EAAA6a,aAGA,MAAA7a,EAAAmS,QACArX,EAAA,CACAqX,OAAgCvK,EAAMQ,aAAApI,EAAAmS,UAGtCpX,EAAAiF,KAEAA,EAAA8a,KAAA,OAAArgB,EAAA6G,KACAtB,EAAA+a,KAAAnV,KAAAC,UAAA3R,QAGAwmB,EA3BgB,CA4BdV,ICrBEgB,GAAc,SAAAhP,GAElB,SAAAiP,IACA,cAAAjP,KAAAzb,MAAAZ,KAAAS,YAAAT,KA4GA,OA9GIkZ,EAAA,EAAiBoS,EAAAjP,GAOrBiP,EAAAprB,UAAA2iB,gBAAA,WACA,IAAA7iB,KAAA4a,SAAA6C,IAEA,OAAApB,EAAAnc,UAAA2iB,gBAAAliB,KAAAX,MAEA,IAAAurB,EAAAvrB,KAAA4a,SAAA2Q,iBACAvrB,KAAA4a,SAAA2Q,iBACA,CAAe9N,IAAAzd,KAAA4a,SAAA6C,KACf,OAAAzd,KAAA4a,SAAA4Q,UACA,IAAAxrB,KAAA4a,SAAA4Q,UAAAD,GAEYtI,IACZ,IAAuBuH,GAAce,GAErC,IAAmBT,GAAYS,IAK/BD,EAAAprB,UAAAggB,mBAAA,SAAApc,EAAAC,GACA,IACAQ,EADAuG,EAAA9K,KAEA,GAAYP,OAAA6a,EAAA,EAAA7a,CAAYqE,MAAAtC,MAKxB,OAFAsC,EADAA,EACAtC,MACA+C,EAAoB0kB,GAAoBtF,EAAkB7f,IACvC8d,EAAA,EAAWzW,QAAAnL,KAAAyrB,YAAAlnB,EAAAR,IAE9B,GAAYtE,OAAA6a,EAAA,EAAA7a,CAAUqE,IAAerE,OAAA6a,EAAA,EAAA7a,CAAcqE,GAAA,CAKnD,IAAA4nB,EAAA5nB,EACA6nB,EAAAD,EAAAliB,OAA+C/J,OAAA6a,EAAA,EAAA7a,CAAUisB,GAAA,2BACzDE,EAAAF,EAAAtnB,QAAAunB,EAAA,KAAAD,EAAAtnB,QAAAunB,EACA,OAAA3rB,KAAAqgB,iBAAAuL,EAAoD5T,EAAQ3Q,MAAAtD,GAAAwH,KAAA,SAAAsgB,GAE5D,OADgBpsB,OAAA0b,EAAA,EAAA1b,CAAqBosB,EAAAD,GACdhK,EAAA,EAAWzW,QAAAL,EAAA2gB,YAAAI,EAAA9nB,MAGlC,GAAYtE,OAAA6a,EAAA,EAAA7a,CAAOqE,GAGnB,OADAS,EAAoB0kB,GAAoBtF,EAAkB7f,IACvC8d,EAAA,EAAWzW,QAAAnL,KAAAyrB,YAAAlnB,EAAAR,IAE9B,GAAYtE,OAAA6a,EAAA,EAAA7a,CAAaqE,IAAAC,KAAAoV,mBAYzB,OAPA5U,EL7CO,SAAAT,EAAAqV,GACP,IAAA2S,EAAArsB,OAAA8N,KAAAzJ,GAAAioB,OACAxnB,EAAA,CACA0H,MAAA,CACA+f,eAA4BvsB,OAAAgW,EAAA,EAAAhW,CAAeqE,IAE3CM,QAAA,2CAA8D6V,EAAkB6R,IAEhF,GAAA3S,EAAA,CACA,IACA6C,EAAAgN,GADyBrF,EAAkBxK,GAC3CjW,OACAqB,EAAAwX,WAAA,CACAE,OAAAD,GAGA,OAAAzX,EK8BoB0nB,CADpBnoB,EACwCC,EAAAoV,oBAC5B1Z,OAAA0b,EAAA,EAAA1b,CAAqB8E,EAAA,qBAAAlB,EAAA,CACjCsP,SAAA,EACAuZ,WAAA,EACA/Z,KAAA,YAEA5N,EAAAF,MAA0B2T,EAAQ3Q,MACfua,EAAA,EAAWzW,QAAAnL,KAAAyrB,YAAAlnB,EAAAR,IAQ9B,IAAAooB,EAAAroB,EACA,OAAA9D,KAAAqgB,iBAAA8L,OAAA9oB,EAAAU,GAAAwH,KAAA,SAAAsgB,GAOA,OANYpsB,OAAA0b,EAAA,EAAA1b,CAAqBosB,EAAA,GAAAM,OAAA9oB,EAAA,CACjCsP,SAAA,EACAuZ,WAAA,EACA/Z,KAAA,YAEA0Z,EAAAxnB,MAAiC2T,EAAQ3Q,MACtBua,EAAA,EAAWzW,QAAAL,EAAA2gB,YAAAI,EAAA9nB,OAM9BunB,EAAAprB,UAAAurB,YAAA,SAAAlnB,EAAAR,GACA,OAAemV,EAAA,EAAgB,GAAG3U,EAAA,CAAUL,SAAAH,KAAAG,YAK5ConB,EAAAprB,UAAAmgB,iBAAA,SAAAjc,EAAAC,EAAAN,QACA,IAAAM,IAA+BA,EAAS2T,EAAQI,MAChD,IAAA7T,EAAA,CACAL,SAAAH,KAAAG,SACAG,QACAD,WAEA,GAAApE,KAAA4a,SAAAwR,kBAAAroB,KAAAoV,mBAAA,CACA,IACA6C,EAA2BgN,GADErF,EAAkB5f,EAAAoV,oBACCjW,OAChDqB,EAAAwX,WAAA,CACAE,OAAAD,GAGA,OAAe4F,EAAA,EAAWzW,QAAA5G,IAE1B+mB,EA/GkB,CAgHhB5I,GC3HK2J,GAAA,4BCWHC,GAAa,SAAAjQ,GAOjB,SAAAkQ,EAAAxR,GAEA,YADA,IAAAA,IAAiCA,EAAA,IACjCsB,EAAA1b,KAAAX,KAAiCqrB,GAActQ,IAAA/a,KAgD/C,OAxDIkZ,EAAA,EAAiBqT,EAAAlQ,GAarBkQ,EAAArsB,UAAAkhB,cAAA,SAAA7c,EAAAnC,EAAA2B,GAQA,OAPAQ,EAAAioB,SAAAjoB,EAAAioB,UAAA,aACAjoB,EAAAod,IAAoBzI,EAAA,EAAgB,GAAG3U,EAAAod,IAAA,CAAcnY,KAAO6iB,GAAQI,SAAYvT,EAAA,EAAgB3U,EAAAod,KAAApd,EAAAod,IAAA8K,UAAA,IAChG,CACAjjB,KAAA,sBACAzG,QD7BO,WC+BPA,QD/BO,UCgCPsZ,EAAAnc,UAAAkhB,cAAAzgB,KAAAX,KAAAuE,EAAAnC,EAAA2B,IAOAwoB,EAAArsB,UAAAwsB,iBAAA,SAAA3R,QACA,IAAAA,IAAiCA,EAAA,IAEjC,IAAAvE,EAAuB/W,OAAA0b,EAAA,EAAA1b,GAAe+W,SACtC,GAAAA,EAGA,GAAAxW,KAAAmhB,aAAA,CAIA,IAAA1D,EAAA1C,EAAA0C,KAAAzd,KAAA2d,SACA,GAAA5C,EAAA/W,QAIA,GAAAyZ,EAAA,CAIA,IAAAkP,EAAAnW,EAAAoW,cAAA,UACAD,EAAAE,OAAA,EACAF,EAAAlE,IAAA,IAAyBlL,EAAGE,GAAAgB,wBAAA1D,GAC5BA,EAAA+R,SACAH,EAAAI,OAAAhS,EAAA+R,SAEAtW,EAAAwW,MAAAxW,EAAAmU,MAAAsC,YAAAN,QATYnV,EAAA,EAAMhW,MAAA,sDAJNgW,EAAA,EAAMhW,MAAA,0DALNgW,EAAA,EAAMhW,MAAA,mEAoBlB+qB,EAzDiB,CA0Df7M,GClEF,IACAwN,GACAC,GAFAC,GAAA,IAGAC,GAAA,EAyBO,SAAAC,GAAAC,EAAAxS,EAAAyS,GAGP,QAFA,IAAAzS,IAA6BA,EAAA,IAE7B,mBAAAwS,EACA,OAAAA,EAEA,IAEA,GAAAA,EAAAhb,WACA,OAAAgb,EAGA,GAAAA,EAAA/a,mBACA,OAAA+a,EAAA/a,mBAGA,MAAAtR,GAIA,OAAAqsB,EAEA,IAAAE,EAAA,WAEAD,GAAA,mBAAAA,GACAA,EAAA5sB,MAAAZ,KAAAS,WAEA,IAAAiC,EAAA9C,MAAAM,UAAAgN,MAAAvM,KAAAF,WAEA,IAKA,IAAAitB,EAAAhrB,EAAAgT,IAAA,SAAAiY,GAA4D,OAAAL,GAAAK,EAAA5S,KAC5D,OAAAwS,EAAAK,YACAL,EAAAK,YAAAhtB,MAAAZ,KAAA0tB,GAEAH,EAAA3sB,MAAAZ,KAAA0tB,GAGA,MAAA/H,GAaA,MAnEA0H,IAAA,EACA5lB,WAAA,WACA4lB,IAAA,IAsDY3pB,EAAS,SAAAtB,GACrBA,EAAAwI,kBAAA,SAAArG,GACA,IAAA8d,EAAyCnJ,EAAA,EAAgB,GAAG3U,GAK5D,OAJAwW,EAAArI,WACwBjT,OAAA0b,EAAA,EAAA1b,CAAqB4iB,OAAAhf,SAAA0X,EAAArI,WAE7C2P,EAAApW,MAA2CiN,EAAA,EAAgB,GAAGmJ,EAAApW,MAAA,CAAyBxL,UAAYhB,OAAAgW,EAAA,EAAAhW,CAASiD,EAAA,KAC5G2f,IAEgBxe,EAAgB8hB,KAEhCA,IAKA,IACA,QAAAkI,KAAAN,EACA9tB,OAAAS,UAAAJ,eAAAa,KAAA4sB,EAAAM,KACAJ,EAAAI,GAAAN,EAAAM,IAIA,MAAAhoB,IACA0nB,EAAArtB,UAAAqtB,EAAArtB,WAAA,GACAutB,EAAAvtB,UAAAqtB,EAAArtB,UACAT,OAAAyP,eAAAqe,EAAA,sBACApe,YAAA,EACA5N,MAAAksB,IAIAhuB,OAAA+V,iBAAAiY,EAAA,CACAlb,WAAA,CACApD,YAAA,EACA5N,OAAA,GAEAkR,oBAAA,CACAtD,YAAA,EACA5N,MAAAgsB,KAIA,IACA9tB,OAAAyP,eAAAue,EAAA,QACAre,IAAA,WACA,OAAAme,EAAA/jB,QAIA,MAAA3D,IAGA,OAAA4nB,EAEA,IAAAK,GAAA,EAOO,SAAAC,GAAAC,EAAAC,GAEP,YADA,IAAAA,IAA8BA,GAAA,GAC9B,SAAA1pB,GAQA,GAJA2oB,QAAA7pB,EAIAkB,GAAA4oB,KAAA5oB,EAAA,CAGA4oB,GAAA5oB,EACA,IAAA2pB,EAAA,WAKA,IAAAC,EACA,IACAA,EAAA5pB,EAAA4pB,OAAAC,GAAA7pB,EAAA4pB,QAAAC,GAAA7pB,GAEA,MAAArD,GACAitB,EAAA,YAEA,IAAAA,EAAAztB,QAGYjB,OAAAwZ,EAAA,EAAAxZ,GAAagF,cAAA,CACzB4pB,SAAA,MAAAL,EACA5pB,QAAA+pB,GACa,CACb5pB,QACAiF,KAAAwkB,KAGAF,IACApmB,aAAAomB,IAEAG,EACAH,GAAArmB,WAAAymB,GAGAA,MASO,SAAAI,KAIP,gBAAA/pB,GACA,IAAA4pB,EACA,IACAA,EAAA5pB,EAAA4pB,OAEA,MAAAjtB,GAGA,OAEA,IAAAqtB,EAAAJ,KAAAI,QAIAA,IAAA,UAAAA,GAAA,aAAAA,GAAAJ,EAAAK,qBAKAtB,IACAa,GAAA,QAAAA,CAAAxpB,GAEAmD,aAAAwlB,IACAA,GAAAzlB,WAAA,WACAylB,QAAA7pB,GACS+pB,MAST,SAAAgB,GAAAK,GAUA,IATA,IAQAC,EARAC,EAAAF,EAGAG,EAAA,GACAC,EAAA,EACA3mB,EAAA,EAEA4mB,EADA,MACApuB,OAEAiuB,GAAAE,IARA,KAcA,UALAH,EAAAK,GAAAJ,KAKAE,EAAA,GAAA3mB,EAAA0mB,EAAAluB,OAAAouB,EAAAJ,EAAAhuB,QAbA,KAgBAkuB,EAAAttB,KAAAotB,GACAxmB,GAAAwmB,EAAAhuB,OACAiuB,IAAAK,WAEA,OAAAJ,EAAAlF,UAAA9T,KAhBA,OAuBA,SAAAmZ,GAAAN,GACA,IACAQ,EACAC,EACAnjB,EACAojB,EACA5uB,EALAquB,EAAA,GAMA,IAAAH,MAAAF,QACA,SAOA,GALAK,EAAAttB,KAAAmtB,EAAAF,QAAAa,eACAX,EAAA1oB,IACA6oB,EAAAttB,KAAA,IAAAmtB,EAAA1oB,KAEAkpB,EAAAR,EAAAQ,YACqBxvB,OAAA6a,EAAA,EAAA7a,CAAQwvB,GAE7B,IADAC,EAAAD,EAAAlZ,MAAA,OACAxV,EAAA,EAAmBA,EAAA2uB,EAAAxuB,OAAoBH,IACvCquB,EAAAttB,KAAA,IAAA4tB,EAAA3uB,IAGA,IAAA8uB,EAAA,8BACA,IAAA9uB,EAAA,EAAeA,EAAA8uB,EAAA3uB,OAA0BH,IACzCwL,EAAAsjB,EAAA9uB,IACA4uB,EAAAV,EAAAa,aAAAvjB,KAEA6iB,EAAAttB,KAAA,IAAAyK,EAAA,KAAAojB,EAAA,MAGA,OAAAP,EAAAhZ,KAAA,IC3RA,IAAI2Z,GAAQ,WACZ,SAAAC,IAEAxvB,KAAAyvB,eAAA,EAIAzvB,KAAAwJ,KAAAgmB,EAAAzpB,GAoIA,OAjIAypB,EAAAtvB,UAAAwvB,kBAAA,SAAApa,GACA,kBAEA,IADA,IAAA5S,EAAA,GACAC,EAAA,EAA4BA,EAAAlC,UAAAC,OAAuBiC,IACnDD,EAAAC,GAAAlC,UAAAkC,GAEA,IAAAgtB,EAAAjtB,EAAA,GAQA,OAPAA,EAAA,GAAsB4qB,GAAIqC,EAAA,CAC1Bjd,UAAA,CACAuP,KAAA,CAA2BsH,SAAAqG,GAAAta,IAC3B3C,SAAA,EACAR,KAAA,gBAGAmD,EAAA1U,MAAAZ,KAAA0C,KAIA8sB,EAAAtvB,UAAA2vB,SAAA,SAAAva,GACA,gBAAA3R,GACA,OAAA2R,EAA4BgY,GAAI3pB,EAAA,CAChC+O,UAAA,CACAuP,KAAA,CACAsH,SAAA,wBACA7U,QAAAkb,GAAAta,IAEA3C,SAAA,EACAR,KAAA,mBAMAqd,EAAAtvB,UAAA4vB,iBAAA,SAAA3B,GACA,IAAAvgB,EAAqBnO,OAAA0b,EAAA,EAAA1b,GACrBswB,EAAAniB,EAAAugB,IAAAvgB,EAAAugB,GAAAjuB,UACA6vB,KAAAjwB,gBAAAiwB,EAAAjwB,eAAA,sBAGQL,OAAAgW,EAAA,EAAAhW,CAAIswB,EAAA,4BAAAza,GACZ,gBAAA0Y,EAAAT,EAAAxS,GACA,IACAwS,EAAAK,YAAqCN,GAAIC,EAAAK,YAAAoC,KAAAzC,GAAA,CACzC7a,UAAA,CACAuP,KAAA,CACAsH,SAAA,cACA7U,QAAAkb,GAAArC,GACAY,UAEAxb,SAAA,EACAR,KAAA,gBAIA,MAAA+E,IAGA,OAAA5B,EAAA3U,KAAAX,KAAAguB,EAAsDV,GAAIC,EAAA,CAC1D7a,UAAA,CACAuP,KAAA,CACAsH,SAAA,mBACA7U,QAAAkb,GAAArC,GACAY,UAEAxb,SAAA,EACAR,KAAA,gBAEiB4I,MAGTtb,OAAAgW,EAAA,EAAAhW,CAAIswB,EAAA,+BAAAza,GACZ,gBAAA0Y,EAAAT,EAAAxS,GACA,IAAApX,EAAA4pB,EACA,IACA5pB,QAAA6O,oBAAA7O,GAEA,MAAAzC,IAGA,OAAAoU,EAAA3U,KAAAX,KAAAguB,EAAArqB,EAAAoX,QAQAyU,EAAAtvB,UAAAqZ,UAAA,WACAvZ,KAAAyvB,eAAAzvB,KAAAyvB,eACA,IAAA7hB,EAAqBnO,OAAA0b,EAAA,EAAA1b,GACbA,OAAAgW,EAAA,EAAAhW,CAAImO,EAAA,aAAA5N,KAAA0vB,kBAAAM,KAAAhwB,OACJP,OAAAgW,EAAA,EAAAhW,CAAImO,EAAA,cAAA5N,KAAA0vB,kBAAAM,KAAAhwB,OACJP,OAAAgW,EAAA,EAAAhW,CAAImO,EAAA,wBAAA5N,KAAA6vB,SAAAG,KAAAhwB,OACZ,CACA,cACA,SACA,OACA,mBACA,iBACA,oBACA,kBACA,cACA,aACA,qBACA,cACA,aACA,iBACA,eACA,kBACA,cACA,cACA,eACA,qBACA,SACA,YACA,eACA,gBACA,YACA,kBACA,SACA,iBACA,4BACA,wBACA+K,QAAA/K,KAAA8vB,iBAAAE,KAAAhwB,QAKAwvB,EAAAzpB,GAAA,WACAypB,EA3IY,GAiJZ,SAAAI,GAAArC,GACA,IACA,OAAAA,KAAA/jB,MAAA,cAEA,MAAAtI,GAGA,qBCtJA,IACA+uB,GADIC,GAASzwB,OAAA0b,EAAA,EAAA1b,GAGT0wB,GAAW,WAIf,SAAAC,EAAArV,GAIA/a,KAAAwJ,KAAA4mB,EAAArqB,GACA/F,KAAA4a,SAAwB1B,EAAA,EAAgB,CAAE7G,SAAA,EAAAge,KAAA,EAAAzF,OAAA,EAAA0F,SAAA,EAAAC,QAAA,EAAAC,KAAA,GAAgFzV,GAgZ1H,OA7YAqV,EAAAlwB,UAAAuwB,mBAAA,WACA,YAA2BP,IAG3B,+CAAAnlB,QAAA,SAAA1G,GACAA,KAA2B6rB,GAAM7d,SAGrB5S,OAAAgW,EAAA,EAAAhW,CAAKywB,GAAM7d,QAAAhO,EAAA,SAAAqsB,GACvB,kBAEA,IADA,IAAAhuB,EAAA,GACAC,EAAA,EAAoCA,EAAAlC,UAAAC,OAAuBiC,IAC3DD,EAAAC,GAAAlC,UAAAkC,GAEA,IAAAguB,EAAA,CACAtC,SAAA,UACApM,KAAA,CACAhW,MAAA,CACAxL,UAA2ChB,OAAAgW,EAAA,EAAAhW,CAASiD,EAAA,IAEpD8U,OAAA,WAEAnT,MAA+B2T,EAAQE,WAAA7T,GACvCD,QAAiCyV,EAAQnX,EAAA,MAEzC,WAAA2B,IACA,IAAA3B,EAAA,KACAiuB,EAAAvsB,QAAA,sBAA6EyV,EAAQnX,EAAAwK,MAAA,2BACrFyjB,EAAA1O,KAAAhW,MAAAxL,UAAkEhB,OAAAgW,EAAA,EAAAhW,CAASiD,EAAAwK,MAAA,OAG3EkjB,EAAA3rB,cAAAksB,EAAA,CACArZ,MAAA5U,EACA2B,UAGAqsB,GACAlX,SAAAtZ,UAAAU,MAAAD,KAAA+vB,EAA4ER,GAAM7d,QAAA3P,SAOlF0tB,EAAAlwB,UAAA0wB,eAAA,WACA,aAA4BV,KAKpBA,GAAM1Z,SAAAqa,iBAAA,QAAoC9C,GAAsB,aAChEmC,GAAM1Z,SAAAqa,iBAAA,WAAuCvC,MAAoB,GAEzE,uBAAAvjB,QAAA,SAAAojB,GACA,IAAA4B,EAAwBG,GAAM/B,IAAY+B,GAAM/B,GAAAjuB,UAChD6vB,KAAAjwB,gBAAAiwB,EAAAjwB,eAAA,sBAGYL,OAAAgW,EAAA,EAAAhW,CAAIswB,EAAA,4BAAAza,GAChB,gBAAA0Y,EAAAT,EAAAxS,GAsBA,OArBAwS,KAAAK,aACA,UAAAI,GAC4BvuB,OAAAgW,EAAA,EAAAhW,CAAI8tB,EAAA,uBAAAuD,GAChC,gBAAAvsB,GAEA,OADoCwpB,GAAsB,QAAtBA,CAAsBxpB,GAC1DusB,EAAAnwB,KAAAX,KAAAuE,MAIA,aAAAypB,GAC4BvuB,OAAAgW,EAAA,EAAAhW,CAAI8tB,EAAA,cAAoBe,QAIpD,UAAAN,GAC4BD,GAAsB,WAAtBA,CAAsB/tB,MAElD,aAAAguB,GAC4BM,KAAoBtuB,OAGhDsV,EAAA3U,KAAAX,KAAAguB,EAAAT,EAAAxS,MAGYtb,OAAAgW,EAAA,EAAAhW,CAAIswB,EAAA,+BAAAza,GAChB,gBAAA0Y,EAAAT,EAAAxS,GACA,IAAApX,EAAA4pB,EACA,IACA5pB,QAAA6O,oBAAA7O,GAEA,MAAAzC,IAGA,OAAAoU,EAAA3U,KAAAX,KAAAguB,EAAArqB,EAAAoX,WAMAqV,EAAAlwB,UAAA6wB,iBAAA,WZpCA9N,MAIA,IADiBxjB,OAAA0b,EAAA,EAAA1b,GACjBmrB,MAAApb,WAAA8P,QAAA,WYoCQ7f,OAAAgW,EAAA,EAAAhW,CAAKywB,GAAM,iBAAAc,GACnB,kBAEA,IADA,IAAAtuB,EAAA,GACAC,EAAA,EAAgCA,EAAAlC,UAAAC,OAAuBiC,IACvDD,EAAAC,GAAAlC,UAAAkC,GAEA,IAEAgP,EAFAsf,EAAAvuB,EAAA,GACAF,EAAA,MAEA,iBAAAyuB,EACAtf,EAAAsf,EAEA,YAAsCf,IAAMe,aAAA9N,SAC5CxR,EAAAsf,EAAAtf,IACAsf,EAAAzuB,SACAA,EAAAyuB,EAAAzuB,SAIAmP,EAAAqI,OAAAiX,GAEAvuB,EAAA,IAAAA,EAAA,GAAAF,SACAA,EAAAE,EAAA,GAAAF,QAEA,IAAAL,EAA6B1C,OAAAwZ,EAAA,EAAAxZ,GAAa8D,YAC1Cka,EAAAtb,KAAAwb,SACA,GAAAF,EAAA,CACA,IAAAyT,EAAA,IAAwC3T,EAAGE,GAAAG,mBAG3C,GAAAsT,GAAAvf,EAAA6I,SAAA0W,GAIA,MAHA,SAAA1uB,GAAAE,EAAA,IAAAA,EAAA,GAAAioB,MACAwG,GAAAzuB,EAAA,GAAAioB,MAEAqG,EAAApwB,MAAmDsvB,GAAMxtB,GAGzD,IAAA0uB,EAAA,CACA5uB,SACAmP,OAEA,OAAAqf,EACApwB,MAA2BsvB,GAAMxtB,GACjC6I,KAAA,SAAAsf,GAUA,OATAuG,EAAAC,YAAAxG,EAAArI,OACA4N,EAAA3rB,cAAA,CACA4pB,SAAA,QACApM,KAAAmP,EACAjf,KAAA,QACqB,CACrBmF,MAAA5U,EACAmoB,aAEAA,IAEApf,MAAA,SAAAjK,GAUA,MATA4uB,EAAA3rB,cAAA,CACA4pB,SAAA,QACApM,KAAAmP,EACA/sB,MAA+B2T,EAAQ3Q,MACvC8K,KAAA,QACqB,CACrB3Q,QACA8V,MAAA5U,IAEAlB,QAMA4uB,EAAAlwB,UAAAoxB,mBAAA,WACA,IAAAxmB,EAAA9K,KACA,GZ9DA4N,EAAiBnO,OAAA0b,EAAA,EAAA1b,GACjB6mB,EAAA1Y,EAAA0Y,OAEAiL,EAAAjL,KAAAkL,KAAAlL,EAAAkL,IAAAC,QACAC,EAAA,YAAA9jB,OAAA0iB,QAAAqB,aAAA/jB,EAAA0iB,QAAAsB,cACAL,GAAAG,EYyDA,CZlEO,IAIP9jB,EACA0Y,EAEAiL,EACAG,EY6DAG,EAAA,SAAAlV,EAAAmV,GACA,IAAAC,EAA4BtyB,OAAA0b,EAAA,EAAA1b,CAASywB,GAAMjM,SAAAC,MAC3C8N,EAA2BvyB,OAAA0b,EAAA,EAAA1b,CAAQqyB,GACnCG,EAA6BxyB,OAAA0b,EAAA,EAAA1b,CAAQkd,GAErCsV,EAAAlgB,OACAkgB,EAAAF,GAKA9B,GAAA6B,EAGAC,EAAA/f,WAAAggB,EAAAhgB,UAAA+f,EAAAjgB,OAAAkgB,EAAAlgB,OAEAggB,EAAAE,EAAA/f,UAEA8f,EAAA/f,WAAAigB,EAAAjgB,UAAA+f,EAAAjgB,OAAAmgB,EAAAngB,OAEA6K,EAAAsV,EAAAhgB,UAEAme,EAAA3rB,cAAA,CACA4pB,SAAA,aACApM,KAAA,CACAtF,OACAmV,SAKAI,EAA4BhC,GAAMiC,WAC1BjC,GAAMiC,WAAA,WAEd,IADA,IAAAzvB,EAAA,GACAC,EAAA,EAA4BA,EAAAlC,UAAAC,OAAuBiC,IACnDD,EAAAC,GAAAlC,UAAAkC,GAEA,IAAAyvB,EAA8BlC,GAAMjM,SAAAC,KAEpC,GADA2N,EAAA5B,GAAAmC,GACAF,EACA,OAAAA,EAAAtxB,MAAAkK,EAAApI,IAuBQjD,OAAAgW,EAAA,EAAAhW,CAAKywB,GAAMI,QAAA,YAAA+B,GACX5yB,OAAAgW,EAAA,EAAAhW,CAAKywB,GAAMI,QAAA,eAAA+B,GAlBnB,SAAAA,EAAAC,GAGA,kBAEA,IADA,IAAA5vB,EAAA,GACAC,EAAA,EAAgCA,EAAAlC,UAAAC,OAAuBiC,IACvDD,EAAAC,GAAAlC,UAAAkC,GAEA,IAAAgP,EAAAjP,EAAAhC,OAAA,EAAAgC,EAAA,QAAAW,EAMA,OAJAsO,GAEAkgB,EAAA5B,GAAAjW,OAAArI,IAEA2gB,EAAA1xB,MAAAZ,KAAA0C,MAOA0tB,EAAAlwB,UAAAqyB,eAAA,WACA,sBAAkCrC,GAAlC,CAuBA,IAAAsC,EAAAxH,eAAA9qB,UACQT,OAAAgW,EAAA,EAAAhW,CAAI+yB,EAAA,gBAAAC,GACZ,kBAEA,IADA,IAAA/vB,EAAA,GACAC,EAAA,EAAgCA,EAAAlC,UAAAC,OAAuBiC,IACvDD,EAAAC,GAAAlC,UAAAkC,GAEA,IAAAgP,EAAAjP,EAAA,GACA1C,KAAA0yB,eAAA,CACAlwB,OAAAE,EAAA,GACAiP,IAAAjP,EAAA,IAEA,IAAAP,EAA6B1C,OAAAwZ,EAAA,EAAAxZ,GAAa8D,YAC1Cka,EAAAtb,KAAAwb,SACA,GAAAF,EAAA,CACA,IAAAyT,EAAA,IAAwC3T,EAAGE,GAAAG,mBAGnBne,OAAA6a,EAAA,EAAA7a,CAAQkS,IAAAuf,GAAAvf,EAAA6I,SAAA0W,KAChClxB,KAAA2yB,wBAAA,GAGA,OAAAF,EAAA7xB,MAAAZ,KAAA0C,MAGQjD,OAAAgW,EAAA,EAAAhW,CAAI+yB,EAAA,gBAAAI,GACZ,kBAEA,IADA,IAAAlwB,EAAA,GACAC,EAAA,EAAgCA,EAAAlC,UAAAC,OAAuBiC,IACvDD,EAAAC,GAAAlC,UAAAkC,GAEA,IAAA6tB,EAAAxwB,KAOA,SAAA6yB,IACA,OAAArC,EAAAtF,WAAA,CACA,GAAAsF,EAAAmC,uBACA,OAEA,IAGAnC,EAAAkC,iBACAlC,EAAAkC,eAAArB,YAAAb,EAAAhO,QAGA,MAAAthB,IAGAkvB,EAAA3rB,cAAA,CACA4pB,SAAA,MACApM,KAAAuO,EAAAkC,eACAvgB,KAAA,QACyB,CACzBqe,SA0BA,OApDAA,EAAAmC,wBACAxB,GAAAzuB,EAAA,IA6BA,kCAAAqI,QAAA,SAAA+nB,IA/EA,SAAAA,EAAAtC,GAEAsC,KAAAtC,GAAA,mBAAAA,EAAAsC,IACgBrzB,OAAAgW,EAAA,EAAAhW,CAAI+wB,EAAAsC,EAAA,SAAAxd,GACpB,OAA2BgY,GAAIhY,EAAA,CAC/B5C,UAAA,CACAuP,KAAA,CACAsH,SAAAuJ,EACApe,QAAAY,KAAA9L,MAAA,eAEAmJ,SAAA,EACAR,KAAA,kBAqEA4gB,CAAAD,EAAAtC,KAEA,uBAAAA,GAAA,mBAAAA,EAAAvF,mBACoBxrB,OAAAgW,EAAA,EAAAhW,CAAI+wB,EAAA,8BAAAlb,GACxB,OAA+BgY,GAAIhY,EAAA,CACnC5C,UAAA,CACAuP,KAAA,CACAsH,SAAA,qBACA7U,QAAAY,KAAA9L,MAAA,eAEAmJ,SAAA,EACAR,KAAA,eAEyB0gB,KAMzBrC,EAAAvF,mBAAA4H,EAEAD,EAAAhyB,MAAAZ,KAAA0C,QASA0tB,EAAA3rB,cAAA,SAAAC,EAAAX,GACYtE,OAAAwZ,EAAA,EAAAxZ,GAAakG,eAAAyqB,IACb3wB,OAAAwZ,EAAA,EAAAxZ,GAAagF,cAAAC,EAAAX,IAWzBqsB,EAAAlwB,UAAAqZ,UAAA,WACAvZ,KAAA4a,SAAAvI,SACArS,KAAAywB,qBAEAzwB,KAAA4a,SAAAyV,KACArwB,KAAA4wB,iBAEA5wB,KAAA4a,SAAA4V,KACAxwB,KAAAuyB,iBAEAvyB,KAAA4a,SAAAgQ,OACA5qB,KAAA+wB,mBAEA/wB,KAAA4a,SAAA0V,SACAtwB,KAAAsxB,sBAMAlB,EAAArqB,GAAA,cACAqqB,EAzZe,GA6Zf,SAAAe,GAAA6B,GAEA,IACA,IAAAC,EAAAhd,KAAAsB,MAAAyb,GACQ7C,GAAW1rB,cAAA,CACnB4pB,SAAA,SACAnqB,SAAA+uB,EAAA/uB,SACAG,MAAA4uB,EAAA5uB,OAAoC2T,EAAQE,WAAA,SAC5C9T,QAAqB3E,OAAA0b,EAAA,EAAA1b,CAAmBwzB,IAC/B,CACT1uB,MAAA0uB,IAGA,MAAAptB,GACQ2R,EAAA,EAAMhW,MAAA,8CC5ad,IAAI0xB,GAAc,WAElB,SAAAC,EAAApY,GAIA/a,KAAAwJ,KAAA2pB,EAAAptB,GACA/F,KAAA4a,SAAwB1B,EAAA,EAAgB,CAAE6M,SAAA,EAAAE,sBAAA,GAA4ClL,GAoFtF,OA/EAoY,EAAAjzB,UAAAqZ,UAAA,WACAlS,MAAA+rB,gBAAA,GACQzK,EAAU,SAAAzlB,EAAA4R,EAAAtT,GAelB,KHzBA6rB,GAAA,GGyBA,CAGA,IAAAtc,EAAuBtR,OAAAwZ,EAAA,EAAAxZ,GAAakG,eAAAwtB,GACpCpiB,GACgBtR,OAAAwZ,EAAA,EAAAxZ,GAAa6E,aAAAyM,EAAAsiB,wBAAAnwB,GAAA,CAC7B+e,KAAA,CAA2B/e,SAC3BkW,kBAAA5X,OAIAxB,KAAA4a,SAAAmL,UACYvO,EAAA,EAAMO,IAAA,oCACN6Q,KAEZ5oB,KAAA4a,SAAAqL,uBACYzO,EAAA,EAAMO,IAAA,iDACN8Q,MAQZsK,EAAAjzB,UAAAmzB,wBAAA,SAAAtX,GACA,IAAatc,OAAA6a,EAAA,EAAA7a,CAAQsc,EAAA3X,UAAA,yBAAA2X,EAAArJ,UAAA,CAIrB,IAAAtO,EAAA2X,EAAA3X,QACA2X,EAAA3X,QACAA,EAAA5C,OAAiC/B,OAAA6a,EAAA,EAAA7a,CAAQ2E,EAAA5C,MAAA4C,WAAA5C,MAAA4C,QAAA,mBAEzC,IAAAG,EAAoB0kB,GAAmBlN,GACvCkG,EAAA,CACAqD,KAAAvJ,EAAAuJ,MAEAvJ,EAAA3X,UACA6d,EAAA7d,QAAA2X,EAAA3X,SAEA2X,EAAAvS,OACAyY,EAAAzY,KAAAuS,EAAAvS,MAEA,IAAArH,EAAqB1C,OAAAwZ,EAAA,EAAAxZ,GAAa8D,YAClCie,EAAArf,KAAAwC,aAAA6c,gBAAA,IACA8R,EAAAvX,EAAAzG,SACcmE,EAAQxD,KAAAC,UAAgBzW,OAAAgW,EAAA,EAAAhW,CAASsc,EAAAzG,WAAAkM,GAC/C,GACA+R,EAAA,yBAAAxX,EAAArJ,UAAA,6BAOA,OALQjT,OAAA0b,EAAA,EAAA1b,CAAqB8E,EAAA+uB,EAAAC,EAAA,CAC7BtR,OACAtP,SAAA,EACAR,KAAA4J,EAAArJ,YAEAnO,GAKA4uB,EAAAptB,GAAA,iBACAotB,EA3FkB,GCHlBK,GAAA,QACAC,GAAA,EAEIC,GAAY,WAIhB,SAAAC,EAAA5Y,QACA,IAAAA,IAAiCA,EAAA,IAIjC/a,KAAAwJ,KAAAmqB,EAAA5tB,GACA/F,KAAA4zB,KAAA7Y,EAAAhP,KAAAynB,GACAxzB,KAAA6pB,OAAA9O,EAAA8Y,OAAAJ,GAyCA,OApCAE,EAAAzzB,UAAAqZ,UAAA,WACQ9Z,OAAAob,EAAA,EAAApb,CAAuB,SAAA8E,EAAAR,GAC/B,IAAAgN,EAAuBtR,OAAAwZ,EAAA,EAAAxZ,GAAakG,eAAAguB,GACpC,OAAA5iB,EACAA,EAAA+iB,SAAAvvB,EAAAR,GAEAQ,KAMAovB,EAAAzzB,UAAA4zB,SAAA,SAAAvvB,EAAAR,GACA,KAAAQ,EAAAT,WAAAS,EAAAT,UAAAoO,QAAAnO,KAAAqV,6BAAA/R,OACA,OAAA9C,EAEA,IAAAwvB,EAAA/zB,KAAAg0B,eAAAjwB,EAAAqV,kBAAApZ,KAAA4zB,MAEA,OADArvB,EAAAT,UAAAoO,OAAiCgH,EAAA,EAAgB6a,EAAAxvB,EAAAT,UAAAoO,QACjD3N,GAKAovB,EAAAzzB,UAAA8zB,eAAA,SAAAxyB,EAAAuK,EAAA7I,GAEA,QADA,IAAAA,IAA+BA,EAAA,MAC/B1B,EAAAuK,aAAA1E,QAAAnE,EAAAxC,OAAA,GAAAV,KAAA6pB,OACA,OAAA3mB,EAEA,IACAY,EAAwBilB,EADCpF,EAAkBniB,EAAAuK,KAE3C,OAAA/L,KAAAg0B,eAAAxyB,EAAAuK,KAAoDmN,EAAA,EAAgB,CAAApV,GAAAZ,KAKpEywB,EAAA5tB,GAAA,eACA4tB,EApDgB,GCJZM,GAASx0B,OAAA0b,EAAA,EAAA1b,GAETy0B,GAAS,WACb,SAAAC,IAIAn0B,KAAAwJ,KAAA2qB,EAAApuB,GAyBA,OApBAouB,EAAAj0B,UAAAqZ,UAAA,WACQ9Z,OAAAob,EAAA,EAAApb,CAAuB,SAAA8E,GAC/B,GAAgB9E,OAAAwZ,EAAA,EAAAxZ,GAAakG,eAAAwuB,GAAA,CAC7B,IAAqBF,GAAMG,YAAeH,GAAMhQ,SAChD,OAAA1f,EAGA,IAAA8L,EAAA9L,EAAA8L,SAAA,GAIA,OAHAA,EAAAsB,IAAAtB,EAAAsB,KAA6CsiB,GAAMhQ,SAAAC,KACnD7T,EAAAgkB,QAAAhkB,EAAAgkB,SAAA,GACAhkB,EAAAgkB,QAAA,cAAgDJ,GAAMG,UAAAE,UAC/Bpb,EAAA,EAAgB,GAAG3U,EAAA,CAAU8L,YAEpD,OAAA9L,KAMA4vB,EAAApuB,GAAA,YACAouB,EA9Ba,GCDFI,GAAmB,CAC9B,IAAQC,EAAgB7Z,eACxB,IAAQ6Z,EAAgBlb,iBACxB,IAAQiW,GACR,IAAQY,GACR,IAAQ+C,GACR,IAAQQ,GACR,IAAQQ,IA2DD,SAAAO,GAAA1Z,QACP,IAAAA,IAA6BA,EAAA,SAC7B1X,IAAA0X,EAAAkE,sBACAlE,EAAAkE,oBAAsCsV,IChE/B,SAAAG,EAAA3Z,IACP,IAAAA,EAAA4Z,OACQnd,EAAA,EAAMM,SAEVrY,OAAAwZ,EAAA,EAAAxZ,GAAauD,WAAA,IAAA0xB,EAAA3Z,ID8Db6Z,CAAYtI,GAAavR,GAOtB,SAAA2R,GAAA3R,QACP,IAAAA,IAA6BA,EAAA,IAC7BA,EAAA/W,UACA+W,EAAA/W,QAA0BvE,OAAAwZ,EAAA,EAAAxZ,GAAa+E,eAEvC,IAAArC,EAAiB1C,OAAAwZ,EAAA,EAAAxZ,GAAa8D,YAC9BpB,GACAA,EAAAuqB,iBAAA3R,GAQO,SAAAvW,KACP,OAAW/E,OAAAwZ,EAAA,EAAAxZ,GAAa+E,cAMjB,SAAAqwB,MAOA,SAAA/H,GAAAnpB,GACPA,IAQO,SAAA2c,GAAArY,GACP,IAAA9F,EAAiB1C,OAAAwZ,EAAA,EAAAxZ,GAAa8D,YAC9B,OAAApB,EACAA,EAAAme,MAAArY,GAEA+Y,QAAA5V,QAAA,GAQO,SAAS0pB,GAAK7sB,GACrB,IAAA9F,EAAiB1C,OAAAwZ,EAAA,EAAAxZ,GAAa8D,YAC9B,OAAApB,EACAA,EAAAye,MAAA3Y,GAEA+Y,QAAA5V,QAAA,GAOO,SAAS2pB,GAAIxH,GAEhBD,GAAYC,EAAZD,GEnJJtuB,EAAAC,EAAAC,EAAA,iCAAA81B,KAAAh2B,EAAAC,EAAAC,EAAA,6BAAA8Y,IAAAhZ,EAAAC,EAAAC,EAAA,2BAAA+Y,IAAAjZ,EAAAC,EAAAC,EAAA,4CAAA2b,EAAA,IAAA7b,EAAAC,EAAAC,EAAA,kCAAAuF,IAAAzF,EAAAC,EAAAC,EAAA,qCAAA2E,IAAA7E,EAAAC,EAAAC,EAAA,iCAAAoF,IAAAtF,EAAAC,EAAAC,EAAA,mCAAAiF,IAAAnF,EAAAC,EAAAC,EAAA,mCAAAqG,IAAAvG,EAAAC,EAAAC,EAAA,8BAAAwE,IAAA1E,EAAAC,EAAAC,EAAA,sCAAA+Z,EAAA,IAAAja,EAAAC,EAAAC,EAAA,kCAAA+Z,EAAA,IAAAja,EAAAC,EAAAC,EAAA,wBAAA+Z,EAAA,IAAAja,EAAAC,EAAAC,EAAA,0BAAA2b,EAAA,IAAA7b,EAAAC,EAAAC,EAAA,kCAAAotB,KAAAttB,EAAAC,EAAAC,EAAA,wCAAAq1B,KAAAv1B,EAAAC,EAAAC,EAAA,8BAAA21B,KAAA71B,EAAAC,EAAAC,EAAA,yBAAAu1B,KAAAz1B,EAAAC,EAAAC,EAAA,gCAAAsF,KAAAxF,EAAAC,EAAAC,EAAA,2BAAA4tB,KAAA9tB,EAAAC,EAAAC,EAAA,qCAAAwtB,KAAA1tB,EAAAC,EAAAC,EAAA,0BAAAohB,KAAAthB,EAAAC,EAAAC,EAAA,0BAAA41B,KAAA91B,EAAAC,EAAAC,EAAA,yBAAA61B,KAAA/1B,EAAAC,EAAAC,EAAA,6BAAAmtB,KAAArtB,EAAAC,EAAAC,EAAA,+BVCO,UUDPF,EAAAC,EAAAC,EAAA,+BAAA+1B,IAUA,IAAAC,GAAA,GAGAC,GAAc11B,OAAA0b,EAAA,EAAA1b,GACd01B,GAAAC,QAAAD,GAAAC,OAAAC,eACAH,GAAAC,GAAAC,OAAAC,cAGA,IAAAL,GAAmB9b,EAAA,EAAgB,GAAGgc,GAAsBV,EAAkBc","file":"10-75ab07a561fc6b73165a.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, dynamicRequire, getGlobalObject, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 30;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureException', exception, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            // TODO: freeze flag\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            var span = top.scope.getSpan();\n            if (span) {\n                return {\n                    'sentry-trace': span.toTraceparent(),\n                };\n            }\n        }\n        return {};\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there\n    try {\n        // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n        // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n        // for example so we do not have to shim it and use `getCurrentHub` universally.\n        var domain = dynamicRequire(module, 'domain');\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\nimport { Span } from './span';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._context = {};\n    }\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            // tslint:disable-next-line:strict-type-predicates\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(tslib_1.__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .catch(reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .catch(reject);\n                }\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = normalize(user);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = tslib_1.__assign({}, this._tags, normalize(tags));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = normalize(value), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extra) {\n        this._extra = tslib_1.__assign({}, this._extra, normalize(extra));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = normalize(extra), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = normalize(fingerprint);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = normalize(level);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransaction = function (transaction) {\n        this._transaction = transaction;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (name, context) {\n        this._context[name] = context ? normalize(context) : undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.startSpan = function () {\n        var span = new Span();\n        this.setSpan(span);\n        return span;\n    };\n    /**\n     * Internal getter for Span, used in Hub.\n     * @hidden\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        Object.assign(newScope, scope, {\n            _scopeListeners: [],\n        });\n        if (scope) {\n            newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n            newScope._tags = tslib_1.__assign({}, scope._tags);\n            newScope._extra = tslib_1.__assign({}, scope._extra);\n            newScope._context = tslib_1.__assign({}, scope._context);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transaction = scope._transaction;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._context = {};\n        this._level = undefined;\n        this._transaction = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = tslib_1.__assign({}, this._extra, event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = tslib_1.__assign({}, this._tags, event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = tslib_1.__assign({}, this._user, event.user);\n        }\n        if (this._context && Object.keys(this._context).length) {\n            event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transaction) {\n            event.transaction = this._transaction;\n        }\n        if (this._span) {\n            event.contexts = event.contexts || {};\n            event.contexts.trace = this._span;\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = tslib_1.__spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","import { uuid4 } from '@sentry/utils';\nexport var TRACEPARENT_REGEXP = /([0-9a-f]{2})-([0-9a-f]{32})-([0-9a-f]{16})-([0-9a-f]{2})/;\n/**\n * Span containg all data about a span\n */\nvar Span = /** @class */ (function () {\n    function Span(_traceId, _spanId, _recorded, _parent) {\n        if (_traceId === void 0) { _traceId = uuid4(); }\n        if (_spanId === void 0) { _spanId = uuid4().substring(16); }\n        if (_recorded === void 0) { _recorded = false; }\n        this._traceId = _traceId;\n        this._spanId = _spanId;\n        this._recorded = _recorded;\n        this._parent = _parent;\n    }\n    /**\n     * Continues a trace\n     * @param traceparent Traceparent string\n     */\n    Span.fromTraceparent = function (traceparent) {\n        var matches = traceparent.match(TRACEPARENT_REGEXP);\n        if (matches) {\n            var parent_1 = new Span(matches[2], matches[3], matches[4] === '01' ? true : false);\n            return new Span(matches[2], undefined, undefined, parent_1);\n        }\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        return \"00-\" + this._traceId + \"-\" + this._spanId + \"-\" + (this._recorded ? '01' : '00');\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return {\n            parent: (this._parent && this._parent.toJSON()) || undefined,\n            span_id: this._spanId,\n            trace_id: this._traceId,\n        };\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=span.js.map","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // tslint:disable:no-unsafe-any\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n    // tslint:enable:no-unsafe-any\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    // tslint:disable-next-line:no-unsafe-any\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n//# sourceMappingURL=is.js.map","/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod, request) {\n    // tslint:disable-next-line: no-unsafe-any\n    return mod.require(request);\n}\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined'\n            ? window\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // tslint:disable-next-line:no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // tslint:disable-next-line:no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @param mechanism Mechanism of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type, mechanism) {\n    if (mechanism === void 0) { mechanism = {\n        handled: true,\n        type: 'generic',\n    }; }\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n    event.exception.values[0].mechanism = event.exception.values[0].mechanism || mechanism;\n}\n//# sourceMappingURL=misc.js.map","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */ (function () {\n    function Memo() {\n        // tslint:disable-next-line\n        this._hasWeakSet = typeof WeakSet === 'function';\n        this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n        if (this._hasWeakSet) {\n            if (this._inner.has(obj)) {\n                return true;\n            }\n            this._inner.add(obj);\n            return false;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < this._inner.length; i++) {\n            var value = this._inner[i];\n            if (value === obj) {\n                return true;\n            }\n        }\n        this._inner.push(obj);\n        return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n        if (this._hasWeakSet) {\n            this._inner.delete(obj);\n        }\n        else {\n            for (var i = 0; i < this._inner.length; i++) {\n                if (this._inner[i] === obj) {\n                    this._inner.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    return Memo;\n}());\nexport { Memo };\n//# sourceMappingURL=memo.js.map","import { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/** JSDoc */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(callback) {\n        var _this = this;\n        /** JSDoc */\n        this._state = States.PENDING;\n        /** JSDoc */\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(value, States.RESOLVED);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(reason, States.REJECTED);\n        };\n        /** JSDoc */\n        this._setResult = function (value, state) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._value = value;\n            _this._state = state;\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            if (_this._state === States.REJECTED) {\n                // tslint:disable-next-line:no-unsafe-any\n                _this._handlers.forEach(function (h) { return h.onFail && h.onFail(_this._value); });\n            }\n            else {\n                // tslint:disable-next-line:no-unsafe-any\n                _this._handlers.forEach(function (h) { return h.onSuccess && h.onSuccess(_this._value); });\n            }\n            _this._handlers = [];\n            return;\n        };\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        try {\n            callback(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        // public then<U>(onSuccess?: HandlerOnSuccess<T, U>, onFail?: HandlerOnFail<U>): SyncPromise<T | U> {\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                onFail: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onSuccess: function (result) {\n                    if (!onfulfilled) {\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onFail) {\n        // tslint:disable-next-line:no-unsafe-any\n        return this.then(function (val) { return val; }, onFail);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return \"[object SyncPromise]\";\n    };\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","import { isError, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source, name, replacement) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof wrapped === 'function') {\n        try {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __sentry__: {\n                    enumerable: false,\n                    value: true,\n                },\n                __sentry_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n                __sentry_wrapped__: {\n                    enumerable: false,\n                    value: wrapped,\n                },\n            });\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error) {\n    // These properties are implemented as magical getters and don't show up in `for-in` loop\n    var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack,\n    };\n    for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n            err[i] = error[i];\n        }\n    }\n    return err;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nexport function normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof Event !== 'undefined' && value instanceof Event) {\n        return Object.getPrototypeOf(value) ? value.constructor.name : 'Event';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    if (Number.isNaN(value)) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = new Memo(); }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    // If value implements `toJSON` method, call it and return early\n    // tslint:disable:no-unsafe-any\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    // tslint:enable:no-unsafe-any\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n        return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = (isError(value) ? objectifyError(value) : value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input, depth) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return JSON.parse(JSON.stringify(input, function (key, value) { return walk(key, value, depth); }));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\n//# sourceMappingURL=object.js.map","import { consoleSandbox, getGlobalObject } from './misc';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };\n//# sourceMappingURL=logger.js.map","/** JSDoc */\nexport var Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity || (Severity = {}));\n//# sourceMappingURL=severity.js.map","/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nexport function captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n */\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}\n//# sourceMappingURL=index.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry__ ? this.__sentry_original__ : this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { isRegExp } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof str !== 'string' || max === 0) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line:prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\n/** Merges provided array of keys into */\nexport function keysToEventMessage(keys, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value, pattern) {\n    if (isRegExp(pattern)) {\n        return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n        return value.includes(pattern);\n    }\n    return false;\n}\n//# sourceMappingURL=string.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            // tslint:disable-next-line:no-unsafe-any\n            return event.exception.values[0].type === 'SentryError';\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                var _a = event.exception.values[0], type = _a.type, value = _a.value;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                // tslint:disable:no-unsafe-any\n                var frames_1 = event.stacktrace.frames;\n                return frames_1[frames_1.length - 1].filename;\n            }\n            if (event.exception) {\n                // tslint:disable:no-unsafe-any\n                var frames_2 = event.exception.values[0].stacktrace.frames;\n                return frames_2[frames_2.length - 1].filename;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","import * as tslib_1 from \"tslib\";\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from '@sentry/utils';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private _representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        Object.assign(this, { host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && Number.isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { urlEncode } from '@sentry/utils';\nimport { Dsn } from './dsn';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + new Date().getTime());\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        return tslib_1.__spread(defaultIntegrations);\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { Dsn } from './dsn';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n        this._integrations = setupIntegrations(this._options);\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (clientReady) {\n            if (_this._processingInterval) {\n                clearInterval(_this._processingInterval);\n            }\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return clientReady && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this._integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            if (_this._processingInterval) {\n                clearInterval(_this._processingInterval);\n            }\n            _this._processingInterval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve(true);\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve(false);\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result;\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint).then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                try {\n                    var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                    if (isInternalException || !beforeSend) {\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                        return;\n                    }\n                    var beforeSendResult = beforeSend(prepared, hint);\n                    if (typeof beforeSendResult === 'undefined') {\n                        logger.error('`beforeSend` method has to return `null` or a valid event.');\n                    }\n                    else if (isThenable(beforeSendResult)) {\n                        _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                    }\n                    else {\n                        finalEvent = beforeSendResult;\n                        if (finalEvent === null) {\n                            logger.log('`beforeSend` returned `null`, will not send event.');\n                            resolve(null);\n                            return;\n                        }\n                        // From here on we are really async\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                    }\n                }\n                catch (exception) {\n                    _this.captureException(exception, {\n                        data: {\n                            __sentry__: true,\n                        },\n                        originalException: exception,\n                    });\n                    reject('`beforeSend` throw an error, will not send event.');\n                }\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .catch(function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","import { Status } from '@sentry/types';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return Promise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return Promise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).catch(function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = getGlobalObject();\n    return global.fetch.toString().indexOf('native') !== -1;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    // tslint:disable-next-line: no-unsafe-any\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","// tslint:disable\nimport * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isError, isErrorEvent, normalize } from '@sentry/utils';\n/**\n * TraceKit - Cross brower stack traces\n *\n * This was originally forked from github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n *\n * NOTE: Last merge with upstream repository\n * Jul 11,2018 - #f03357c\n *\n * https://github.com/csnover/TraceKit\n * @license MIT\n * @namespace TraceKit\n */\nvar window = getGlobalObject();\nvar TraceKit = {\n    _report: false,\n    _collectWindowErrors: false,\n    _computeStackTrace: false,\n    _linesOfContext: false,\n};\n// var TraceKit: TraceKitInterface = {};\n// var TraceKit = {};\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `_has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\n * A safe form of location.href<br/>\n *\n * @return {string} location.href\n */\nfunction getLocationHref() {\n    if (typeof document === 'undefined' || document.location == null)\n        return '';\n    return document.location.href;\n}\n/**\n * Cross-browser processing of unhandled exceptions\n *\n * Syntax:\n * ```js\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n * ```\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *     on top frame; column number is not guaranteed\n *   - Opera: full stack trace with line and column numbers\n *   - Chrome: full stack trace with line and column numbers\n *   - Safari: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *   - IE: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit._computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a TraceKit.StackTrace object as described in the\n * TraceKit._computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._report = (function reportModuleWrapper() {\n    var handlers = [], lastException = null, lastExceptionStack = null;\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     * @memberof TraceKit.report\n     */\n    function _subscribe(handler) {\n        // NOTE: We call both handlers manually in browser/integrations/globalhandler.ts\n        // So user can choose which one he wants to attach\n        // installGlobalHandler();\n        // installGlobalUnhandledRejectionHandler();\n        handlers.push(handler);\n    }\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {TraceKit.StackTrace} stack\n     * @param {boolean} isWindowError Is this a top-level window error?\n     * @param {Error=} error The error that's being handled (if available, null otherwise)\n     * @memberof TraceKit.report\n     * @throws An exception if an error occurs while calling an handler.\n     */\n    function _notifyHandlers(stack, isWindowError, error) {\n        var exception = null;\n        if (isWindowError && !TraceKit._collectWindowErrors) {\n            return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i](stack, isWindowError, error);\n                }\n                catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n        if (exception) {\n            throw exception;\n        }\n    }\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error occurred.\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\n     * @param {Error=} errorObj The actual Error object.\n     * @memberof TraceKit.report\n     */\n    function _traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n        // If 'errorObj' is ErrorEvent, get real Error from inside\n        errorObj = isErrorEvent(errorObj) ? errorObj.error : errorObj;\n        // If 'message' is ErrorEvent, get real message from inside\n        message = isErrorEvent(message) ? message.message : message;\n        if (lastExceptionStack) {\n            TraceKit._computeStackTrace._augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n            processLastException();\n        }\n        else if (errorObj && isError(errorObj)) {\n            stack = TraceKit._computeStackTrace(errorObj);\n            stack.mechanism = 'onerror';\n            _notifyHandlers(stack, true, errorObj);\n        }\n        else {\n            var location = {\n                url: url,\n                line: lineNo,\n                column: columnNo,\n            };\n            var name;\n            var msg = message; // must be new var or will modify original `arguments`\n            if ({}.toString.call(message) === '[object String]') {\n                var groups = message.match(ERROR_TYPES_RE);\n                if (groups) {\n                    name = groups[1];\n                    msg = groups[2];\n                }\n            }\n            location.func = UNKNOWN_FUNCTION;\n            location.context = null;\n            stack = {\n                name: name,\n                message: msg,\n                mode: 'onerror',\n                mechanism: 'onerror',\n                stack: [\n                    tslib_1.__assign({}, location, { \n                        // Firefox sometimes doesn't return url correctly and this is an old behavior\n                        // that I prefer to port here as well.\n                        // It can be altered only here, as previously it's using `location.url` for other things — Kamil\n                        url: location.url || getLocationHref() }),\n                ],\n            };\n            _notifyHandlers(stack, true, null);\n        }\n        if (_oldOnerrorHandler) {\n            // @ts-ignore\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n        return false;\n    }\n    /**\n     * Ensures all unhandled rejections are recorded.\n     * @param {PromiseRejectionEvent} e event.\n     * @memberof TraceKit.report\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n     */\n    function _traceKitWindowOnUnhandledRejection(e) {\n        var err = (e && (e.detail ? e.detail.reason : e.reason)) || e;\n        var stack = TraceKit._computeStackTrace(err);\n        stack.mechanism = 'onunhandledrejection';\n        if (!stack.message) {\n            stack.message = JSON.stringify(normalize(err));\n        }\n        _notifyHandlers(stack, true, err);\n    }\n    /**\n     * Install a global onerror handler\n     * @memberof TraceKit.report\n     */\n    function _installGlobalHandler() {\n        if (_onErrorHandlerInstalled === true) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = _traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n    /**\n     * Install a global onunhandledrejection handler\n     * @memberof TraceKit.report\n     */\n    function _installGlobalUnhandledRejectionHandler() {\n        window.onunhandledrejection = _traceKitWindowOnUnhandledRejection;\n    }\n    /**\n     * Process the most recent exception\n     * @memberof TraceKit.report\n     */\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack, _lastException = lastException;\n        lastExceptionStack = null;\n        lastException = null;\n        _notifyHandlers(_lastExceptionStack, false, _lastException);\n    }\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @memberof TraceKit.report\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\n     */\n    function _report(ex) {\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            }\n            else {\n                processLastException();\n            }\n        }\n        var stack = TraceKit._computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, stack.incomplete ? 2000 : 0);\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n    _report._subscribe = _subscribe;\n    _report._installGlobalHandler = _installGlobalHandler;\n    _report._installGlobalUnhandledRejectionHandler = _installGlobalUnhandledRejectionHandler;\n    return _report;\n})();\n/**\n * An object representing a single stack frame.\n * @typedef {Object} StackFrame\n * @property {string} url The JavaScript or HTML file URL.\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * @property {string[]?} args The arguments passed to the function, if known.\n * @property {number=} line The line number, if known.\n * @property {number=} column The column number, if known.\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n * @memberof TraceKit\n */\n/**\n * An object representing a JavaScript stack trace.\n * @typedef {Object} StackTrace\n * @property {string} name The name of the thrown exception.\n * @property {string} message The exception error message.\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\n * @memberof TraceKit\n */\n/**\n * TraceKit._computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   ```js\n *   s = TraceKit._computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n *   ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit._computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit._computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._computeStackTrace = (function _computeStackTraceWrapper() {\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromStackProp(ex) {\n        if (!ex || !ex.stack) {\n            return null;\n        }\n        // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n        var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i, \n        // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n        // generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n        // We need this specific case for now because we want no other regex to match.\n        gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i, winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i, \n        // Used to additionally parse URL/line/column from eval frames\n        isEval, geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i, chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/, lines = ex.stack.split('\\n'), stack = [], submatch, parts, element, reference = /^(.*) is undefined$/.exec(ex.message);\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n                isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n                if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                    // throw out eval line/column and use top-most line/column number\n                    parts[2] = submatch[1]; // url\n                    parts[3] = submatch[2]; // line\n                    parts[4] = submatch[3]; // column\n                }\n                element = {\n                    url: parts[2],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: isNative ? [parts[2]] : [],\n                    line: parts[3] ? +parts[3] : null,\n                    column: parts[4] ? +parts[4] : null,\n                };\n            }\n            else if ((parts = winjs.exec(lines[i]))) {\n                element = {\n                    url: parts[2],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: [],\n                    line: +parts[3],\n                    column: parts[4] ? +parts[4] : null,\n                };\n            }\n            else if ((parts = gecko.exec(lines[i]))) {\n                isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n                if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                    // throw out eval line/column and use top-most line number\n                    parts[1] = parts[1] || \"eval\";\n                    parts[3] = submatch[1];\n                    parts[4] = submatch[2];\n                    parts[5] = ''; // no column when eval\n                }\n                else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                    // FireFox uses this awesome columnNumber property for its top frame\n                    // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                    // so adding 1\n                    // NOTE: this hack doesn't work if top-most frame is eval\n                    stack[0].column = ex.columnNumber + 1;\n                }\n                element = {\n                    url: parts[3],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: parts[2] ? parts[2].split(',') : [],\n                    line: parts[4] ? +parts[4] : null,\n                    column: parts[5] ? +parts[5] : null,\n                };\n            }\n            else {\n                continue;\n            }\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            element.context = null;\n            stack.push(element);\n        }\n        if (!stack.length) {\n            return null;\n        }\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = null;\n        }\n        return {\n            mode: 'stack',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n    }\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10+ uses this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n        if (!stacktrace) {\n            return;\n        }\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i, opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i, lines = stacktrace.split('\\n'), stack = [], parts;\n        for (var line = 0; line < lines.length; line += 2) {\n            var element = null;\n            if ((parts = opera10Regex.exec(lines[line]))) {\n                element = {\n                    url: parts[2],\n                    line: +parts[1],\n                    column: null,\n                    func: parts[3],\n                    args: [],\n                };\n            }\n            else if ((parts = opera11Regex.exec(lines[line]))) {\n                element = {\n                    url: parts[6],\n                    line: +parts[1],\n                    column: +parts[2],\n                    func: parts[3] || parts[4],\n                    args: parts[5] ? parts[5].split(',') : [],\n                };\n            }\n            if (element) {\n                if (!element.func && element.line) {\n                    element.func = UNKNOWN_FUNCTION;\n                }\n                if (element.line) {\n                    element.context = null;\n                }\n                if (!element.context) {\n                    element.context = [lines[line + 1]];\n                }\n                stack.push(element);\n            }\n        }\n        if (!stack.length) {\n            return null;\n        }\n        return {\n            mode: 'stacktrace',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n    }\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromOperaMultiLineMessage(ex) {\n        // TODO: Clean this function up\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i, stack = [], scripts = window && window.document && window.document.getElementsByTagName('script'), inlineScriptBlocks = [], parts;\n        for (var s in scripts) {\n            if (_has(scripts, s) && !scripts[s].src) {\n                inlineScriptBlocks.push(scripts[s]);\n            }\n        }\n        for (var line = 2; line < lines.length; line += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[line]))) {\n                item = {\n                    url: parts[2],\n                    func: parts[3],\n                    args: [],\n                    line: +parts[1],\n                    column: null,\n                };\n            }\n            else if ((parts = lineRE2.exec(lines[line]))) {\n                item = {\n                    url: parts[3],\n                    func: parts[4],\n                    args: [],\n                    line: +parts[1],\n                    column: null,\n                };\n            }\n            else if ((parts = lineRE3.exec(lines[line]))) {\n                var url = getLocationHref().replace(/#.*$/, '');\n                item = {\n                    url: url,\n                    func: '',\n                    args: [],\n                    line: parts[1],\n                    column: null,\n                };\n            }\n            if (item) {\n                if (!item.func) {\n                    item.func = UNKNOWN_FUNCTION;\n                }\n                // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                item.context = [lines[line + 1]];\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n        return {\n            mode: 'multiline',\n            name: ex.name,\n            message: lines[0],\n            stack: stack,\n        };\n    }\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            url: url,\n            line: lineNo,\n        };\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n            if (!initial.func) {\n                initial.func = UNKNOWN_FUNCTION;\n            }\n            if (!initial.context) {\n                initial.context = null;\n            }\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = null;\n            }\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    }\n                    else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        }\n        else {\n            stackInfo.incomplete = true;\n        }\n        return false;\n    }\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {TraceKit.StackTrace=} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i, stack = [], funcs = {}, recursion = false, parts, item;\n        for (var curr = _computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === _computeStackTrace || curr === TraceKit._report) {\n                continue;\n            }\n            item = {\n                url: null,\n                func: UNKNOWN_FUNCTION,\n                args: [],\n                line: null,\n                column: null,\n            };\n            if (curr.name) {\n                item.func = curr.name;\n            }\n            else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n            if (typeof item.func === 'undefined') {\n                try {\n                    item.func = parts.input.substring(0, parts.input.indexOf('{'));\n                }\n                catch (e) { }\n            }\n            if (funcs['' + curr]) {\n                recursion = true;\n            }\n            else {\n                funcs['' + curr] = true;\n            }\n            stack.push(item);\n        }\n        if (depth) {\n            stack.splice(0, depth);\n        }\n        var result = {\n            mode: 'callers',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n        _augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     * @memberof TraceKit._computeStackTrace\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = depth == null ? 0 : +depth;\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = _computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        return {\n            original: ex,\n            name: ex.name,\n            message: ex.message,\n            mode: 'failed',\n        };\n    }\n    computeStackTrace._augmentStackTraceWithInitialElement = _augmentStackTraceWithInitialElement;\n    computeStackTrace._computeStackTraceFromStackProp = _computeStackTraceFromStackProp;\n    return computeStackTrace;\n})();\nTraceKit._collectWindowErrors = true;\nTraceKit._linesOfContext = 11;\nvar _subscribe = TraceKit._report._subscribe;\nvar _installGlobalHandler = TraceKit._report._installGlobalHandler;\nvar _installGlobalUnhandledRejectionHandler = TraceKit._report._installGlobalUnhandledRejectionHandler;\nvar _computeStackTrace = TraceKit._computeStackTrace;\nexport { _subscribe, _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _computeStackTrace };\n//# sourceMappingURL=tracekit.js.map","import { keysToEventMessage, normalizeToSize } from '@sentry/utils';\nimport { _computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException) {\n    var exceptionKeys = Object.keys(exception).sort();\n    var event = {\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n        message: \"Non-Error exception captured with keys: \" + keysToEventMessage(exceptionKeys),\n    };\n    if (syntheticException) {\n        var stacktrace = _computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.includes('captureMessage') || firstFrameFunction.includes('captureException')) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.includes('sentryWrapped')) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { SentryError } from './error';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return Promise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .catch(function () {\n            return _this.remove(task).catch(function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            Promise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .catch(function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        return this._buffer.add(global.fetch(this.url, defaultOptions).then(function (response) { return ({\n            status: Status.fromHttpCode(response.status),\n        }); }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        return this._buffer.add(new Promise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                if (request.status === 200) {\n                    resolve({\n                        status: Status.fromHttpCode(request.status),\n                    });\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isPlainObject, supportsFetch, SyncPromise, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { _computeStackTrace } from './tracekit';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = this._options.transportOptions\n            ? this._options.transportOptions\n            : { dsn: this._options.dsn };\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var _this = this;\n        var event;\n        if (isErrorEvent(exception) && exception.error) {\n            // If it is an ErrorEvent with `error` property, extract it to get actual Error\n            var errorEvent = exception;\n            exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n            event = eventFromStacktrace(_computeStackTrace(exception));\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        if (isDOMError(exception) || isDOMException(exception)) {\n            // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n            // then we just extract the name and message, as they don't provide anything else\n            // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n            // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n            var domException = exception;\n            var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n            var message_1 = domException.message ? name_1 + \": \" + domException.message : name_1;\n            return this.eventFromMessage(message_1, Severity.Error, hint).then(function (messageEvent) {\n                addExceptionTypeValue(messageEvent, message_1);\n                return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n            });\n        }\n        if (isError(exception)) {\n            // we have a real Error object, do nothing\n            event = eventFromStacktrace(_computeStackTrace(exception));\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        if (isPlainObject(exception) && hint && hint.syntheticException) {\n            // If it is plain Object, serialize it manually and extract options\n            // This will allow us to group events based on top-level keys\n            // which is much better than creating new group when any key/value change\n            var objectException = exception;\n            event = eventFromPlainObject(objectException, hint.syntheticException);\n            addExceptionTypeValue(event, 'Custom Object', undefined, {\n                handled: true,\n                synthetic: true,\n                type: 'generic',\n            });\n            event.level = Severity.Error;\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        // If none of previous checks were valid, then it means that\n        // it's not a DOMError/DOMException\n        // it's not a plain Object\n        // it's not a valid ErrorEvent (one with an error property)\n        // it's not an Error\n        // So bail out and capture it as a simple message:\n        var stringException = exception;\n        return this.eventFromMessage(stringException, undefined, hint).then(function (messageEvent) {\n            addExceptionTypeValue(messageEvent, \"\" + stringException, undefined, {\n                handled: true,\n                synthetic: true,\n                type: 'generic',\n            });\n            messageEvent.level = Severity.Error;\n            return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n        });\n    };\n    /**\n     * This is an internal helper function that creates an event.\n     */\n    BrowserBackend.prototype._buildEvent = function (event, hint) {\n        return tslib_1.__assign({}, event, { event_id: hint && hint.event_id });\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var event = {\n            event_id: hint && hint.event_id,\n            level: level,\n            message: message,\n        };\n        if (this._options.attachStacktrace && hint && hint.syntheticException) {\n            var stacktrace = _computeStackTrace(hint.syntheticException);\n            var frames_1 = prepareFramesForEvent(stacktrace.stack);\n            event.stacktrace = {\n                frames: frames_1,\n            };\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.3.0';\n//# sourceMappingURL=version.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { addExceptionTypeValue, isString, normalize } from '@sentry/utils';\nvar debounceDuration = 1000;\nvar keypressTimeout;\nvar lastCapturedEvent;\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        // tslint:disable-next-line:strict-type-predicates\n        if (before && typeof before === 'function') {\n            before.apply(this, arguments);\n        }\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means Raven caught an error invoking your application code. This is\n            //       expected behavior and NOT indicative of a bug with Raven.js.\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: normalize(args, 3) });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        Object.defineProperty(sentryWrapped, 'name', {\n            get: function () {\n                return fn.name;\n            },\n        });\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\nvar debounceTimer = 0;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        var captureBreadcrumb = function () {\n            // try/catch both:\n            // - accessing event.target (see getsentry/raven-js#838, #768)\n            // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n            //   can throw an exception in some circumstances.\n            var target;\n            try {\n                target = event.target ? _htmlTreeAsString(event.target) : _htmlTreeAsString(event);\n            }\n            catch (e) {\n                target = '<unknown>';\n            }\n            if (target.length === 0) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: \"ui.\" + eventName,\n                message: target,\n            }, {\n                event: event,\n                name: eventName,\n            });\n        };\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(captureBreadcrumb);\n        }\n        else {\n            captureBreadcrumb();\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler() {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            breadcrumbEventHandler('input')(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlTreeAsString(elem) {\n    var currentElem = elem;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    var height = 0;\n    var len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    var nextStr;\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = _htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n            break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n    }\n    return out.reverse().join(separator);\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\n//# sourceMappingURL=helpers.js.map","import { fill, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                        mechanism: {\n                            data: {\n                                function: 'handleEvent',\n                                handler: getFunctionName(fn),\n                                target: target,\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n    try {\n        return (fn && fn.name) || '<anonymous>';\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return '<anonymous>';\n    }\n}\n//# sourceMappingURL=trycatch.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { fill, getEventDescription, getGlobalObject, isString, logger, normalize, parseUrl, safeJoin, supportsHistory, supportsNativeFetch, } from '@sentry/utils';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\nvar global = getGlobalObject();\nvar lastHref;\n/** Default Breadcrumbs instrumentations */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentConsole = function () {\n        if (!('console' in global)) {\n            return;\n        }\n        ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n            if (!(level in global.console)) {\n                return;\n            }\n            fill(global.console, level, function (originalConsoleLevel) {\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var breadcrumbData = {\n                        category: 'console',\n                        data: {\n                            extra: {\n                                arguments: normalize(args, 3),\n                            },\n                            logger: 'console',\n                        },\n                        level: Severity.fromString(level),\n                        message: safeJoin(args, ' '),\n                    };\n                    if (level === 'assert') {\n                        if (args[0] === false) {\n                            breadcrumbData.message = \"Assertion failed: \" + (safeJoin(args.slice(1), ' ') || 'console.assert');\n                            breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n                        }\n                    }\n                    Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                        input: args,\n                        level: level,\n                    });\n                    // this fails for some browsers. :(\n                    if (originalConsoleLevel) {\n                        Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                    }\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentDOM = function () {\n        if (!('document' in global)) {\n            return;\n        }\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n        global.document.addEventListener('keypress', keypressEventHandler(), false);\n        // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n        ['EventTarget', 'Node'].forEach(function (target) {\n            var proto = global[target] && global[target].prototype;\n            if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n                return;\n            }\n            fill(proto, 'addEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    if (fn && fn.handleEvent) {\n                        if (eventName === 'click') {\n                            fill(fn, 'handleEvent', function (innerOriginal) {\n                                return function (event) {\n                                    breadcrumbEventHandler('click')(event);\n                                    return innerOriginal.call(this, event);\n                                };\n                            });\n                        }\n                        if (eventName === 'keypress') {\n                            fill(fn, 'handleEvent', keypressEventHandler());\n                        }\n                    }\n                    else {\n                        if (eventName === 'click') {\n                            breadcrumbEventHandler('click', true)(this);\n                        }\n                        if (eventName === 'keypress') {\n                            keypressEventHandler()(this);\n                        }\n                    }\n                    return original.call(this, eventName, fn, options);\n                };\n            });\n            fill(proto, 'removeEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    var callback = fn;\n                    try {\n                        callback = callback && (callback.__sentry_wrapped__ || callback);\n                    }\n                    catch (e) {\n                        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                    }\n                    return original.call(this, eventName, callback, options);\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentFetch = function () {\n        if (!supportsNativeFetch()) {\n            return;\n        }\n        fill(global, 'fetch', function (originalFetch) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var fetchInput = args[0];\n                var method = 'GET';\n                var url;\n                if (typeof fetchInput === 'string') {\n                    url = fetchInput;\n                }\n                else if ('Request' in global && fetchInput instanceof Request) {\n                    url = fetchInput.url;\n                    if (fetchInput.method) {\n                        method = fetchInput.method;\n                    }\n                }\n                else {\n                    url = String(fetchInput);\n                }\n                if (args[1] && args[1].method) {\n                    method = args[1].method;\n                }\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (filterUrl && url.includes(filterUrl)) {\n                        if (method === 'POST' && args[1] && args[1].body) {\n                            addSentryBreadcrumb(args[1].body);\n                        }\n                        return originalFetch.apply(global, args);\n                    }\n                }\n                var fetchData = {\n                    method: method,\n                    url: url,\n                };\n                return originalFetch\n                    .apply(global, args)\n                    .then(function (response) {\n                    fetchData.status_code = response.status;\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        type: 'http',\n                    }, {\n                        input: args,\n                        response: response,\n                    });\n                    return response;\n                })\n                    .catch(function (error) {\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        level: Severity.Error,\n                        type: 'http',\n                    }, {\n                        error: error,\n                        input: args,\n                    });\n                    throw error;\n                });\n            };\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentHistory = function () {\n        var _this = this;\n        if (!supportsHistory()) {\n            return;\n        }\n        var captureUrlChange = function (from, to) {\n            var parsedLoc = parseUrl(global.location.href);\n            var parsedTo = parseUrl(to);\n            var parsedFrom = parseUrl(from);\n            // Initial pushState doesn't provide `from` information\n            if (!parsedFrom.path) {\n                parsedFrom = parsedLoc;\n            }\n            // because onpopstate only tells you the \"new\" (to) value of location.href, and\n            // not the previous (from) value, we need to track the value of the current URL\n            // state ourselves\n            lastHref = to;\n            // Use only the path component of the URL if the URL matches the current\n            // document (almost all the time when using pushState)\n            if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                to = parsedTo.relative;\n            }\n            if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                from = parsedFrom.relative;\n            }\n            Breadcrumbs.addBreadcrumb({\n                category: 'navigation',\n                data: {\n                    from: from,\n                    to: to,\n                },\n            });\n        };\n        // record navigation (URL) changes\n        var oldOnPopState = global.onpopstate;\n        global.onpopstate = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var currentHref = global.location.href;\n            captureUrlChange(lastHref, currentHref);\n            if (oldOnPopState) {\n                return oldOnPopState.apply(_this, args);\n            }\n        };\n        /**\n         * @hidden\n         */\n        function historyReplacementFunction(originalHistoryFunction) {\n            // note history.pushState.length is 0; intentionally not declaring\n            // params to preserve 0 arity\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args.length > 2 ? args[2] : undefined;\n                // url argument is optional\n                if (url) {\n                    // coerce to string (this is what pushState does)\n                    captureUrlChange(lastHref, String(url));\n                }\n                return originalHistoryFunction.apply(this, args);\n            };\n        }\n        fill(global.history, 'pushState', historyReplacementFunction);\n        fill(global.history, 'replaceState', historyReplacementFunction);\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentXHR = function () {\n        if (!('XMLHttpRequest' in global)) {\n            return;\n        }\n        /**\n         * @hidden\n         */\n        function wrapProp(prop, xhr) {\n            // TODO: Fix XHR types\n            if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n                    return wrap(original, {\n                        mechanism: {\n                            data: {\n                                function: prop,\n                                handler: (original && original.name) || '<anonymous>',\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                });\n            }\n        }\n        var xhrproto = XMLHttpRequest.prototype;\n        fill(xhrproto, 'open', function (originalOpen) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args[1];\n                this.__sentry_xhr__ = {\n                    method: args[0],\n                    url: args[1],\n                };\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (isString(url) && (filterUrl && url.includes(filterUrl))) {\n                        this.__sentry_own_request__ = true;\n                    }\n                }\n                return originalOpen.apply(this, args);\n            };\n        });\n        fill(xhrproto, 'send', function (originalSend) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var xhr = this; // tslint:disable-line:no-this-assignment\n                if (xhr.__sentry_own_request__) {\n                    addSentryBreadcrumb(args[0]);\n                }\n                /**\n                 * @hidden\n                 */\n                function onreadystatechangeHandler() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.__sentry_own_request__) {\n                            return;\n                        }\n                        try {\n                            // touching statusCode in some platforms throws\n                            // an exception\n                            if (xhr.__sentry_xhr__) {\n                                xhr.__sentry_xhr__.status_code = xhr.status;\n                            }\n                        }\n                        catch (e) {\n                            /* do nothing */\n                        }\n                        Breadcrumbs.addBreadcrumb({\n                            category: 'xhr',\n                            data: xhr.__sentry_xhr__,\n                            type: 'http',\n                        }, {\n                            xhr: xhr,\n                        });\n                    }\n                }\n                ['onload', 'onerror', 'onprogress'].forEach(function (prop) {\n                    wrapProp(prop, xhr);\n                });\n                if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                    fill(xhr, 'onreadystatechange', function (original) {\n                        return wrap(original, {\n                            mechanism: {\n                                data: {\n                                    function: 'onreadystatechange',\n                                    handler: (original && original.name) || '<anonymous>',\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        }, onreadystatechangeHandler);\n                    });\n                }\n                else {\n                    // if onreadystatechange wasn't actually set by the page on this xhr, we\n                    // are free to set our own and capture the breadcrumb\n                    xhr.onreadystatechange = onreadystatechangeHandler;\n                }\n                return originalSend.apply(this, args);\n            };\n        });\n    };\n    /**\n     * Helper that checks if integration is enabled on the client.\n     * @param breadcrumb Breadcrumb\n     * @param hint BreadcrumbHint\n     */\n    Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\n        if (getCurrentHub().getIntegration(Breadcrumbs)) {\n            getCurrentHub().addBreadcrumb(breadcrumb, hint);\n        }\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        if (this._options.console) {\n            this._instrumentConsole();\n        }\n        if (this._options.dom) {\n            this._instrumentDOM();\n        }\n        if (this._options.xhr) {\n            this._instrumentXHR();\n        }\n        if (this._options.fetch) {\n            this._instrumentFetch();\n        }\n        if (this._options.history) {\n            this._instrumentHistory();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        Breadcrumbs.addBreadcrumb({\n            category: 'sentry',\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { addExceptionTypeValue, isString, logger, normalize, truncate } from '@sentry/utils';\nimport { shouldIgnoreOnError } from '../helpers';\nimport { eventFromStacktrace } from '../parsers';\nimport { _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _subscribe, } from '../tracekit';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        _subscribe(function (stack, _, error) {\n            // TODO: use stack.context to get a valuable information from TraceKit, eg.\n            // [\n            //   0: \"  })\"\n            //   1: \"\"\n            //   2: \"  function foo () {\"\n            //   3: \"    Sentry.captureException('some error')\"\n            //   4: \"    Sentry.captureMessage('some message')\"\n            //   5: \"    throw 'foo'\"\n            //   6: \"  }\"\n            //   7: \"\"\n            //   8: \"  function bar () {\"\n            //   9: \"    foo();\"\n            //   10: \"  }\"\n            // ]\n            if (shouldIgnoreOnError()) {\n                return;\n            }\n            var self = getCurrentHub().getIntegration(GlobalHandlers);\n            if (self) {\n                getCurrentHub().captureEvent(self._eventFromGlobalHandler(stack), {\n                    data: { stack: stack },\n                    originalException: error,\n                });\n            }\n        });\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            _installGlobalHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            _installGlobalUnhandledRejectionHandler();\n        }\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace.\n     *\n     * @param stacktrace TraceKitStackTrace to be converted to an Event.\n     */\n    GlobalHandlers.prototype._eventFromGlobalHandler = function (stacktrace) {\n        if (!isString(stacktrace.message) && stacktrace.mechanism !== 'onunhandledrejection') {\n            // There are cases where stacktrace.message is an Event object\n            // https://github.com/getsentry/sentry-javascript/issues/1949\n            // In this specific case we try to extract stacktrace.message.error.message\n            var message = stacktrace.message;\n            stacktrace.message =\n                message.error && isString(message.error.message) ? message.error.message : 'No error message';\n        }\n        var event = eventFromStacktrace(stacktrace);\n        var data = {\n            mode: stacktrace.mode,\n        };\n        if (stacktrace.message) {\n            data.message = stacktrace.message;\n        }\n        if (stacktrace.name) {\n            data.name = stacktrace.name;\n        }\n        var client = getCurrentHub().getClient();\n        var maxValueLength = (client && client.getOptions().maxValueLength) || 250;\n        var fallbackValue = stacktrace.original\n            ? truncate(JSON.stringify(normalize(stacktrace.original)), maxValueLength)\n            : '';\n        var fallbackType = stacktrace.mechanism === 'onunhandledrejection' ? 'UnhandledRejection' : 'Error';\n        // This makes sure we have type/value in every exception\n        addExceptionTypeValue(event, fallbackValue, fallbackType, {\n            data: data,\n            handled: false,\n            type: stacktrace.mechanism,\n        });\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { _computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = _computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // HTTP Interface: https://docs.sentry.io/clientdev/interfaces/http/?platform=javascript\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return Promise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return Promise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n */\nexport function wrap(fn) {\n    // tslint:disable-next-line: no-unsafe-any\n    internalWrap(fn)();\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    getCurrentHub().bindClient(new clientClass(options));\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nexport { Severity, Status, } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, withScope, getHubFromCarrier, getCurrentHub, Hub, Scope, } from '@sentry/core';\nexport { BrowserClient } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {};\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n    windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\nexport { INTEGRATIONS as Integrations, Transports };\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}